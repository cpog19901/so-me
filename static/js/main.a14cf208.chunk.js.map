{"version":3,"sources":["components/Nav.js","components/Photos.js","components/CreatePost.js","components/CreateComment.js","components/Comment.js","components/Post.js","components/PostsPage.js","images/login-img.jpg","images/skulls.png","components/LoginPage.js","components/Friends.js","components/Wall.js","components/LogoutPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","nav","position","height","overflowX","top","left","zIndex","borderRight","padding","backgroundColor","width","navHeading","marginTop","navBtn","border","borderRadius","margin","justifyContent","transition","transitionDuration","color","navIcon","marginRight","right","transform","navBtnList","paddingRight","logoutBtn","menuBtn","textAlign","cursor","fontSize","navImg","navBtnText","fontFamily","fontWeight","Nav","classes","currentUser","JSON","parse","localStorage","getItem","useState","isMenuVisible","setMenuVisible","className","onClick","style","display","Typography","variant","Avatar","src","picture","medium","alt","login","username","List","to","textDecoration","ListItem","input","Photos","addPhoto","photos","usersPhotos","imageSelected","setImageSelected","type","onChange","event","target","files","Button","e","formData","FormData","append","Axios","post","then","response","console","log","data","photoURL","secure_url","newPhoto","imageId","asset_id","imageURL","photoUploader","Box","sx","overflowY","ImageList","cols","gap","map","item","ImageListItem","id","srcSet","loading","filter","userPhoto","submitBtn","textBox","CreatePost","props","currentDate","Date","toLocaleString","uuidv4","title","content","posterUsername","avatar","timestamp","setPost","handleChange","name","value","prevPost","action","TextField","fullWidth","placeholder","label","multiline","size","onAdd","preventDefault","submitCommentBtn","CreateComment","commentOwner","commentBelongsTo","commentContent","commentPostedBy","commentAvatar","commentTimestamp","comment","setComment","prevComment","postContent","join","overflowWrap","alignSelf","profileInfo","contentBox","marginBottom","commentHolder","marginLeft","delIcon","date","whiteSpace","breakpoints","down","Comment","Paper","elevation","onDelete","Post","comments","setComments","isLikeClicked","setIsLikeClicked","deleteComment","prevComments","commentItem","index","setUsersComments","fetch","method","like","setLike","changeColor","i","postId","newComment","headers","body","stringify","usersComments","postsTitle","PostsPage","usersPosts","setUsersPosts","addPost","deletePost","posts","postDate","useParams","undefined","postItem","userPost","image1","backgroundImage","image","backgroundPosition","backgroundSize","backgroundRepeat","opacity","loginPaper","maxWidth","alignItems","btn","subtitle","grid","overlay","skulls","mixBlendMode","imgText","imgTextMiddle","imgTextLower","bottom","sloganContainer","LoginPage","friendsList","history","getCurrentUser","useHistory","password","creds","setCreds","error","setError","handleCreds","prevCreds","Grid","container","clone","order","xs","md","Input","friend","setItem","push","box","paddingTop","profilePic","email","bg","Friends","searchQuery","setSearchQuery","searchTerm","spacing","val","first","toLowerCase","includes","sm","lg","large","last","tabs","tab","paper","img","postLink","Wall","randomId","setValue","newValue","friendDetails","fullUri","nat","location","state","country","Tabs","textColor","indicatorColor","aria-label","Tab","logoutBox","LogoutPage","clear","setTimeout","window","p","createTheme","typography","body1","App","setFriendsList","setUsersPhotos","setPosts","setPhotos","newPost","prevPosts","prevItems","useEffect","getUsers","axios","get","getPosts","getComments","getPhotos","all","spread","allDataPosts","allDataComments","allDataPhotos","reverse","fetchData","ThemeProvider","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oVAOMA,EAAYC,aAAY,SAAAC,GAC1B,MAAO,CACPC,IAAI,CACJC,SAAU,QACVC,OAAQ,QACRC,UAAW,SACXC,IAAK,IACLC,KAAM,IACNC,OAAQ,MACRC,YAAa,uBACbC,QAAS,SACTC,gBAAiB,YACjBC,MAAO,SAGPC,WAAW,CACPC,UAAW,QAGfC,OACA,CACIC,OAAQ,uBACRC,aAAc,OACdP,QAAS,OACTQ,OAAQ,mBACRC,eAAgB,gBAChB,UAAY,CACZR,gBAAiB,aACjBS,WAAY,UACZC,mBAAoB,QACpBC,MAAO,UAKVC,QAAU,CACTX,MAAO,OACPR,OAAQ,OACRD,SAAU,WACVqB,YAAa,MACbC,MAAO,IACPnB,IAAK,MACLoB,UAAW,mBACXf,gBAAiB,QACjBM,aAAc,MACdP,QAAS,OAGXiB,WAAW,CACPC,aAAc,QAGlBC,UAAU,CACNf,UAAW,QAEfgB,QAAQ,CACJC,UAAU,OACVC,OAAQ,UACR7B,SAAU,QACVG,IAAK,IACLC,KAAM,IACNC,OAAQ,MACRyB,SAAS,QAGbC,OAAO,CACHhB,OAAQ,QAGZiB,WAAW,CACPC,WAAY,SACZC,WAAY,WAmELC,EA9DH,WAET,IAAMC,EAAUxC,IAEZyC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WAGrD,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAsBC,EAAtB,KAcI,OACI,gCAGR,cAAC,IAAD,CAAiBC,UAAWT,EAAQT,QAASmB,QAhBxB,WAEG,GAAjBH,EACCC,GAAe,GAEK,GAAhBD,GACJC,GAAe,MAWf,sBAAKG,MAAO,CAACC,QAASL,EAAgB,eAAiB,QAASE,UAAWT,EAAQrC,IAAnF,UAEA,cAACkD,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWT,EAAQ1B,WAA5C,mBACA,cAACyC,EAAA,EAAD,CAAQN,UAAWT,EAAQL,OAAQqB,IAAKf,EAAYgB,QAAQC,OAAQC,IAAI,KACxE,cAACN,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCb,EAAYmB,MAAMC,WAE/C,eAACC,EAAA,EAAD,CAAMb,UAAWT,EAAQZ,WAAzB,UAIA,cAAC,IAAD,CAAMmC,GAAG,iBAAiBZ,MAAO,CAAEa,eAAgB,OAAQzC,MAAM,cAAjE,SACA,eAAC0C,EAAA,EAAD,CAAUhB,UAAWT,EAAQxB,OAA7B,UACD,cAACqC,EAAA,EAAD,CAAYJ,UAAWT,EAAQJ,WAA/B,sBADC,KACiE,mBAAGa,UAAU,6BAG9E,cAAC,IAAD,CAAMc,GAAG,eAAeZ,MAAO,CAAEa,eAAgB,OAAQzC,MAAM,cAA/D,SACA,eAAC0C,EAAA,EAAD,CAAUhB,UAAWT,EAAQxB,OAA7B,UACA,cAACqC,EAAA,EAAD,CAAYJ,UAAWT,EAAQJ,WAA/B,oBADA,IAC+D,mBAAGa,UAAU,0BAG5E,cAAC,IAAD,CAAMc,GAAI,gBAAgBZ,MAAO,CAAEa,eAAgB,OAAQzC,MAAM,cAAjE,SACA,eAAC0C,EAAA,EAAD,CAAUhB,UAAWT,EAAQxB,OAA7B,UACF,cAACqC,EAAA,EAAD,CAAYJ,UAAWT,EAAQJ,WAA/B,sBADE,IAC+D,mBAAGa,UAAU,uBAG7E,cAAC,IAAD,CAAMc,GAAG,gBAAgBZ,MAAO,CAAEa,eAAgB,OAAQzC,MAAM,cAAhE,SACA,eAAC0C,EAAA,EAAD,CAAUhB,UAAWT,EAAQxB,OAAQmC,MAAO,CAACpC,UAAW,QAAxD,UACA,cAACsC,EAAA,EAAD,CAAYJ,UAAWT,EAAQJ,WAA/B,sBADA,IACiE,mBAAGa,UAAU,uC,oCChInFjD,EAAYC,YAAW,CAC3BiE,MAAM,CAEJ/C,OAAQ,OACRR,QAAS,OACTO,aAAc,OACdmB,WAAY,qBAqGD8B,EA/FA,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,YAE3B7B,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WAEhDL,EAASxC,IAEf,EAA0C8C,mBAAS,IAAnD,mBAAOyB,EAAP,KAAsBC,EAAtB,KACA,EAAiC1B,mBAAS,IAA1C,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBACA,GADA,UACgCA,mBAAS,KAAzC,6BAkCI,OACI,gCACA,cAAC,EAAD,IACI,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBAMR,uBAAOL,UAAWT,EAAQ0B,MAAOO,KAAK,OAAOC,SAAW,SAACC,GAC3DH,EAAiBG,EAAMC,OAAOC,MAAM,OAGtC,cAACC,EAAA,EAAD,CAAQxB,QAAQ,YAAY/B,MAAM,UAAUkD,KAAK,SAASvB,QArCtC,SAAC6B,GACnB,IAAMC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQX,GACxBS,EAASE,OAAO,gBAAiB,YAEjCC,IAAMC,KAAK,yDAA0DJ,GAAUK,MAAK,SAACC,GACnFC,QAAQC,IAAIF,EAASG,MACrB,IAAMC,EAAWJ,EAASG,KAAKE,WAEzBC,EAAW,CACbC,QAFYP,EAASG,KAAKK,SAG1BC,SAAUL,EACVM,cAAevD,EAAYmB,MAAMC,UAIrCO,EAASwB,OAqBf,0BAEA,cAACK,EAAA,EAAD,CAAKC,GAAI,CAAErF,MAAO,IAAKR,OAAQ,IAAK8F,UAAW,SAAUhF,OAAO,QAAhE,SAEM,eAACiF,EAAA,EAAD,CAAW9C,QAAQ,UAAU+C,KAAM,EAAGC,IAAK,GAA3C,UACGjC,EAAOkC,KAAI,SAACC,GAAD,OACV,cAACC,EAAA,EAAD,CAAkCC,GAAIF,EAAKX,QAA3C,SACE,qBACErC,IAAG,UAAKgD,EAAKT,SAAV,+BACHY,OAAM,UAAKH,EAAKT,SAAV,wCACNpC,IAAK6C,EACLI,QAAQ,UALQJ,EAAKX,YAF7B,IAYGvB,EAAYuC,QAAO,SAACC,GACnB,GAAGA,EAAUd,gBAAkBvD,EAAYmB,MAAMC,SACjD,OAAOiD,KAENP,KAAI,SAACC,GAAD,OACL,cAACC,EAAA,EAAD,CAAkCC,GAAIF,EAAKX,QAA3C,SACE,qBACErC,IAAG,UAAKgD,EAAKT,SAAV,+BACHY,OAAM,UAAKH,EAAKT,SAAV,wCACNpC,IAAK6C,EACLI,QAAQ,UALQJ,EAAKX,qB,kCC5F7B7F,EAAYC,YAAW,CACzB8G,UAAU,CACN5F,OAAQ,OACRP,gBAAiB,aACjBW,MAAO,QACP,UAAW,CACPX,gBAAiB,eAGzBoG,QAAQ,CACJpG,gBAAgB,YAChBO,OAAQ,YA6FD8F,MAxFf,SAAqBC,GAErB,IAAM1E,EAAUxC,IAEVmH,GAAc,IAAIC,MAAOC,iBAO3B,EAAwBvE,mBAAS,CAC7B4D,GAAIY,cACJC,MAAO,GACPC,QAAS,GACTC,eAAgBP,EAAMO,eACtBC,OAAQR,EAAMQ,OACdC,UAAWR,IANf,mBAAO/B,EAAP,KAAawC,EAAb,KA2BA,SAASC,EAAclD,GACnB,MAAsBA,EAAMC,OAArBkD,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACXH,GAAQ,SAAAI,GAEN,kCACOA,GADP,kBAEKF,EAAMC,OAOnB,OACI,8BACI,uBAAME,OAAO,GAAb,UACA,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,YAAa,mBACbN,KAAK,QACLC,MAAO3C,EAAKmC,MACZ7C,SAAUmD,EACVnB,GAAG,kBACHpD,QAAQ,SACR+E,MAAM,QACNpF,UAAWT,EAAQwE,UAKnB,cAACkB,EAAA,EAAD,CACAC,WAAS,EACTC,YAAa,qBACbN,KAAK,UACLC,MAAO3C,EAAKoC,QACZ9C,SAAUmD,EACVnB,GAAG,kBACH4B,WAAS,EACThF,QAAQ,SACR+E,MAAM,UACNpF,UAAWT,EAAQwE,UAGnB,cAAClC,EAAA,EAAD,CAAQ7B,UAAWT,EAAQuE,UAAYzD,QAAQ,YAAYiF,KAAK,SAAST,KAAK,cAAcrD,KAAK,SAASvB,QA3DxH,SAAoB6B,GAClBmC,EAAMsB,MAAMpD,GACZL,EAAE0D,iBACFb,EAAQ,CACJlB,GAAIY,cACJC,MAAO,GACPC,QAAS,GACTC,eAAgBP,EAAMO,eACtBC,OAAQR,EAAMQ,OACdC,UAAWR,KAkDH,+B,iBCjGVnH,EAAYC,YAAW,CAE1ByI,iBAAiB,CACbvH,OAAQ,SACRP,gBAAiB,aACjBW,MAAO,QACP,UAAW,CACVX,gBAAiB,iBAkFV+H,EA3EO,SAACzB,GAEnB,IAAM1E,EAAUxC,IACVmH,GAAc,IAAIC,MAAOC,iBAEzB5E,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WAElD+F,EAAc1B,EAAM2B,iBAItB,EAA6B/F,mBAAS,CAClC4D,GAAIY,cACJwB,eAAgB,GAChBF,aAAcA,EACdG,gBAAkBtG,EAAYmB,MAAMC,SACpCmF,cAAevG,EAAYgB,QAAQC,OACnCuF,iBAAkB9B,IANtB,mBAAM+B,EAAN,KAAeC,EAAf,KAuCA,OAEI,qBAAKlG,UAAU,gBAAf,SACA,uBAAMgF,OAAO,GAAb,UACA,cAACC,EAAA,EAAD,CACAJ,KAAK,iBACLC,MAAOmB,EAAQJ,eACfX,WAAS,EACTC,YAAY,kBACZE,WAAS,EACThF,QAAQ,SACR+E,MAAM,cACN3D,SA1BuB,SAACC,GACxB,MAAsBA,EAAMC,OAArBkD,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbxC,QAAQC,IAAI0D,GACZC,GAAW,SAAAC,GACP,kCACOA,GADP,kBAEKtB,EAAMC,UAsBf,cAACjD,EAAA,EAAD,CACA7B,UAAWT,EAAQkG,iBACnBZ,KAAK,iBACLrD,KAAK,SACLnB,QAAQ,YACRJ,QA/CJ,SAAuB6B,GACnBmC,EAAMsB,MAAMU,GACZnE,EAAE0D,iBACFU,EAAW,CACPzC,GAAIY,cACJwB,eAAgB,GAChBF,aAAcA,EACdG,gBAAkBtG,EAAYmB,MAAMC,SACpCmF,cAAevG,EAAYgB,QAAQC,OACnCuF,iBAAkB9B,KAiCtB,kC,SC5EFnH,EAAYC,aAAW,SAAAC,GAC3B,MAAM,CACJmJ,YAAY,CACXhH,WAAY,CAAC,SAAS,cAAciH,OACpChH,WAAY,MACZiH,aAAc,cAGf7B,OAAO,CACLjH,OAAQ,MAGVqH,KAAK,CACHlH,gBAAiB,aACjBM,aAAc,gBACdP,QAAS,oBACT6I,UAAW,SACXjI,MAAO,QACPf,KAAM,OACNJ,SAAU,WACVK,OAAQ,KAGVgJ,YAAY,CACVrG,QAAQ,OACRhD,SAAU,WACVG,IAAK,QAGPmJ,WAAW,CACT/I,QAAS,OACTqB,UAAW,UACX2H,aAAc,OACdvJ,SAAU,YAGZwJ,cAAc,CACZ/I,MAAO,MACPgJ,WAAY,QAEdC,QAAQ,CACNvJ,IAAK,IACLmB,MAAO,IACPtB,SAAU,WACVuB,UAAW,oBAEZoI,KAAK,aACJxJ,IAAK,OACPC,KAAM,MACNmB,UAAW,wBACXJ,MAAO,QACP6B,QAAS,SACTzC,QAAS,MACTP,SAAU,WACVc,aAAc,OACdN,gBAAiB,WACjBoJ,WAAY,SACZ3H,WAAY,mBACXnC,EAAM+J,YAAYC,KAAK,MAAO,CACxB1J,KAAM,YAiCF2J,EA1BC,SAACjD,GAEjB,IAAMzE,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WAG5CL,EAAUxC,IAMlB,OACE,sBAAKiD,UAAWT,EAAQoH,cAAxB,UACA,sBAAK3G,UAAWT,EAAQiH,YAAxB,UACA,cAAClG,EAAA,EAAD,CAAQN,UAAWT,EAAQkF,OAAQlE,IAAK0D,EAAM8B,cAAerF,IAAI,KACjE,cAACN,EAAA,EAAD,CAAYJ,UAAWT,EAAQsF,KAAMxE,QAAQ,KAA7C,SAAmD4D,EAAM6B,qBAE1D,eAACqB,EAAA,EAAD,CAAOnH,UAAWT,EAAQkH,WAAYW,UAAY,GAAlD,UACC5H,EAAYmB,MAAMC,WAAaqD,EAAM6B,gBAAkB,cAAC,IAAD,CAAU9F,UAAWT,EAAQsH,QAAS3G,MAAO,CAAClB,OAAQ,UAAWC,SAAU,OAAQX,MAAM,WAAY2B,QAX1J,WACCqC,QAAQC,IAAI0B,EAAMR,IACfQ,EAAMoD,SAASpD,EAAMR,GAAIQ,EAAM2B,qBASiJ,KACtL,mBAAG5F,UAAWT,EAAQ6G,YAAtB,SAAoCnC,EAAMM,UAC1C,cAACnE,EAAA,EAAD,CAAYJ,UAAWT,EAAQuH,KAA/B,SAAsC7C,EAAM+B,0BCjFxCjJ,GAJc0C,KAAKC,MAAMC,aAAaC,QAAQ,WAIlC5C,aAAW,SAAAC,GAC3B,MAAM,CACJmJ,YAAY,CACXhH,WAAY,CAAC,SAAS,cAAciH,OACpChH,WAAY,MACZiH,aAAc,cAGf7B,OAAO,CACLjH,OAAQ,MAGVsJ,KAAK,aACHxJ,IAAK,OACPC,KAAM,MACNmB,UAAW,wBACXJ,MAAO,QACP6B,QAAS,SACTzC,QAAS,MACTP,SAAU,WACVc,aAAc,OACdN,gBAAiB,WACjBoJ,WAAY,SACZ3H,WAAY,UACXnC,EAAM+J,YAAYC,KAAK,MAAO,CAC7B1J,KAAM,QAIRsH,KAAK,CACHlH,gBAAiB,aACjBM,aAAc,gBACdP,QAAS,oBACT6I,UAAW,SACXjI,MAAO,QACPf,KAAM,OACNJ,SAAU,WACVK,OAAQ,KAGVgJ,YAAY,CACVrG,QAAQ,OACRhD,SAAU,WACVG,IAAK,QAGPmJ,WAAW,CACT/I,QAAS,OACTqB,UAAW,UACX2H,aAAc,OACdvJ,SAAU,YAEZ0J,QAAQ,CACPvJ,IAAK,IACLmB,MAAO,IACPtB,SAAU,WACVuB,UAAW,yBAuKD4I,MAjKf,SAAcrD,GAGd,IAAM1E,EAAUxC,IAGhB,EAAgC8C,mBAAS,IAAzC,mBAAO0H,EAAP,KAAiBC,EAAjB,KAGA,EAAyC3H,oBAAS,GAAlD,mBAAM4H,EAAN,KAAqBC,EAArB,KAGMlI,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WA6BpD,SAAS+H,EAAclE,GACrBnB,QAAQC,IAAIkB,GACN+D,GAAY,SAAAI,GACV,OAAOA,EAAahE,QAAO,SAACiE,EAAaC,GAEvC,OAAOD,EAAYpE,KAAOA,QAI9BQ,EAAM8D,kBAAiB,SAAAH,GACrB,OAAOA,EAAahE,QAAO,SAACiE,EAAaC,GAEvC,OAAOD,EAAYpE,KAAOA,QAI9BuE,MAAM,kCAAkCvE,EAAI,CAC5CwE,OAAQ,WAUhB,MAAwBpI,mBAAS,QAAjC,mBAAOqI,EAAP,KAAaC,EAAb,KAkBA,SAASC,IACRV,GAAiB,GACjBS,EAAQ,uBAKT,OAAO,qCAEC,eAACnF,EAAA,EAAD,CAAKhD,UAAWT,EAAQiH,YAAxB,UACC,cAAClG,EAAA,EAAD,CAAQN,UAAWT,EAAQkF,OAAQlE,IAAK0D,EAAMQ,OAAQ/D,IAAI,KAC1D,cAACN,EAAA,EAAD,CAAYJ,UAAWT,EAAQsF,KAAMxE,QAAQ,KAA7C,SAAmD4D,EAAMO,oBAE1D,eAAC2C,EAAA,EAAD,CAAOnH,UAAWT,EAAQkH,WAAYW,UAAY,GAAlD,UACAnD,EAAMO,iBAAmBhF,EAAYmB,MAAMC,SAAW,cAAC,IAAD,CAAUZ,UAAWT,EAAQsH,QAAS3G,MAAO,CAAClB,OAAQ,UAAWC,SAAU,OAAQX,MAAM,WAAY2B,QArBnK,WACQgE,EAAMoD,SAASpD,EAAMR,OAoBgK,KACrL,cAACrD,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B4D,EAAMK,QAC/B,mBAAGtE,UAAWT,EAAQ6G,YAAtB,SAAoCnC,EAAMM,UAC1C,cAAC,IAAD,CAAYrE,MAAQ,CAAC5B,MAAOmJ,EAAgB,MAAQ,SAAUnC,KAAM,GAAIrF,QAASmI,IAAc,+BAAOF,IACtG,cAAC9H,EAAA,EAAD,CAAYJ,UAAWT,EAAQuH,KAA/B,SAAsC7C,EAAMS,eAM5C6C,EAASjE,KAAI,SAACuE,EAAaQ,GAC3B,OAAQ,cAAC,EAAD,CAEP5E,GAAKoE,EAAYpE,GACjBc,QAASsD,EAAYhC,eACrBC,gBAAkB+B,EAAY/B,gBAC9BC,cAAgB8B,EAAY9B,cAC5BC,iBAAoB6B,EAAY7B,iBAChCqB,SAAUM,EACVS,YAAcA,EACdxC,iBAAmB3B,EAAMqE,OACzBb,cAAeA,EACfS,KAAOA,GAVFL,EAAYpE,OAenB,cAAC,EAAD,CACE8B,MA/GV,SAAoBgD,GAGlBf,GAAY,SAAAI,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAyBW,OAO1BP,MAAM,2CAA4C,CAChDC,OAAQ,OACRO,QAAS,CAAC,eAAgB,oBAC1BC,KAAMhJ,KAAKiJ,UAAUH,MAkGf3C,iBAAmB3B,EAAMqE,SAGlCrE,EAAM0E,cAAc/E,QAAO,SAACiE,GAE3B,OAAOA,EAAYlC,eAAiB1B,EAAMqE,UAEzChF,KAAI,SAACuE,EAAaQ,GACZ,OAAQ,cAAC,EAAD,CAEP5E,GAAKoE,EAAYpE,GACjBc,QAASsD,EAAYhC,eACrBC,gBAAkB+B,EAAY/B,gBAC9BC,cAAgB8B,EAAY9B,cAC5BC,iBAAoB6B,EAAY7B,iBAChCqB,SAAUM,EACVS,YAAcA,EACdxC,iBAAmB3B,EAAMqE,OACzBb,cAAeA,EACfS,KAAOA,GAVFL,EAAYpE,WC5MrB1G,EAAUC,YAAW,CACzB4L,WAAa,CACXjL,gBAAgB,YAChBD,QAAS,OACTO,aAAc,UAgHH4K,EA3GG,SAAC,GAA8F,IAA5FC,EAA2F,EAA3FA,WAAYH,EAA+E,EAA/EA,cAA8BZ,GAAiD,EAAhEgB,cAAgE,EAAjDhB,kBAAkBiB,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,MAGhG3J,EAAQxC,IACRyC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WAKhD,EAA+BC,mBAAS,IAAxC,mBAAOsJ,EAAP,KACA,GADA,KAC0CtJ,mBAASL,EAAYmB,MAAMC,WAArE,mBAAO4D,EAAP,KACA,GADA,KAC4B3E,mBAASL,EAAYgB,QAAQC,SAAzD,mBAAOgE,EAAP,KAEK6D,GAFL,KAEec,cAAVd,QAIL,OAHAhG,QAAQC,IAAI+F,GAIZ,gCACD,cAAC,EAAD,IAEG,qBAAKtI,UAAU,YAAf,SAIA,sBAAKA,UAAU,kBAAf,UACA,qBAAKA,UAAU,0BAAf,SACA,cAACI,EAAA,EAAD,CAAYJ,UAAWT,EAAQqJ,WAAYvI,QAAQ,KAAnD,0BAMUgJ,IAAXf,EAAuB,cAAC,EAAD,CACpB/C,MAAQyD,EACRxE,eAAiBA,EACjBC,OAAQA,IACH,KAKNyE,EAAMtF,QAAO,SAAA0F,GACX,OAAGhB,IAASgB,EAAS7F,SAEA4F,IAAXf,EADAgB,OACH,KAGLhG,KAAI,SAACgG,EAAUxB,GACjB,OAEC,cAAC,EAAD,CAEArE,GAAK6F,EAAS7F,GACd6E,OAASgB,EAAS7F,GAClBa,MAAOgF,EAAShF,MAChBC,QAAS+E,EAAS/E,QAClBC,eAAiB8E,EAAS9E,eAC1BC,OAAQ6E,EAAS7E,OACjBC,UAAa4E,EAAS5E,UACtB2C,SAAU4B,EACVE,SAAWA,EACXR,cAAgBA,EAChBZ,iBAAmBA,GAXfuB,EAAS7F,OAkBbqF,EAAWlF,QAAO,SAAA2F,GAClB,OAAGjB,IAASiB,EAAS9F,SAED4F,IAAXf,EADFiB,OACD,KAGJjG,KAAI,SAACgG,EAAUxB,GAClB,OAAQ,cAAC,EAAD,CAEPrE,GAAK6F,EAAS7F,GACd6E,OAASgB,EAAS7F,GAClBa,MAAOgF,EAAShF,MAChBC,QAAS+E,EAAS/E,QAClBC,eAAiB8E,EAAS9E,eAC1BC,OAAQ6E,EAAS7E,OACjBC,UAAa4E,EAAS5E,UACtB2C,SAAU4B,EACVE,SAAWA,EACXR,cAAgBA,EAChBZ,iBAAmBA,GAXfuB,EAAS7F,gB,kBC/FR,MAA0B,sCCA1B,MAA0B,mCCYnC1G,EAAYC,aAAW,SAACC,GAE1B,MAAO,CACPuM,OAAO,CAEHC,gBAAgB,OAAD,OAASC,EAAT,KACfC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBzM,OAAQ,QACRQ,MAAO,OACPT,SAAU,WACV2M,QAAS,OAKb7I,MAAM,CACFhD,aAAa,OACbgB,SAAU,OACVvB,QAAS,QAGbqM,WAAW,aACPrM,QAAS,OACTsM,SAAU,QACV9L,OAAQ,YACR+L,WAAY,SACZnM,UAAU,OACVH,gBAAiB,aAChBV,EAAM+J,YAAYC,KAAK,MAAO,IAKnCiD,IAAI,CACAjL,SAAU,OACVf,OAAQ,OACRP,gBAAiB,cAGrBwM,SAAS,CACL/K,WAAY,CAAC,SAAS,cAAciH,OACpCpH,SAAU,OACVf,OAAQ,QAGZkM,KAAK,CACD7D,UAAU,UAGd8D,QAAQ,CACJlN,SAAU,WACVG,IAAK,IACLC,KAAM,IACNkM,gBAAgB,OAAD,OAASa,EAAT,KACf1M,MAAO,OACPR,OAAQ,OACRI,OAAQ,KACRqM,iBAAkB,SAClBlM,gBAAiB,UACjB4M,aAAc,cAGlBC,QAAQ,CACJlM,MAAO,QACPW,SAAU,OACVvB,QAAS,OACTC,gBAAiB,aACjBM,aAAc,OACd+L,SAAU,SAIdS,cAAc,CACVxL,SAAU,OACVX,MAAO,QACP0L,SAAU,QACV5K,WAAW,CACP,SACA,cACFiH,KAAK,KACRvI,UAAW,QAGd4M,aAAa,CACTzL,SAAU,OACVX,MAAO,QACPqM,OAAQ,KACRX,SAAU,QACV9L,OAAO,OACPkB,WAAW,CACP,WACA,cACFiH,KAAK,KACPpI,aAAc,OACdL,MAAO,QAIXgN,gBAAgB,CACZzN,SAAU,WACVG,IAAK,KACLE,OAAQ,KACRI,MAAM,OACPM,OAAQ,YA8FA2M,EAvFG,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAEhBC,GAFgD,EAAnBC,eAEnBC,eAEd,EAA0BpL,mBAAS,CAC/Be,SAAU,GACVsK,SAAU,KAFd,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAA0BvL,oBAAS,GAAnC,mBAAOwL,EAAP,KAAcC,EAAd,KAGMC,EAAc,SAACzJ,GACrB,MAAsBA,EAAEH,OAAjBkD,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbsG,GAAU,SAAAI,GACN,OAAO,2BACAA,GADP,kBAEK3G,EAAOC,QAsBVvF,EAAUxC,IAGZ,OAEE,mCAEE,eAAC0O,EAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAAC1I,EAAA,EAAD,CAAK2I,OAAK,EAACC,MAAO,CAAEC,GAAI,EAAIC,GAAI,GAAhC,SAEA,cAACL,EAAA,EAAD,CAAMlI,MAAI,EAACsI,GAAI,GAAIC,GAAI,EAAvB,SACF,sBAAKrI,GAAG,eAAezD,UAAWT,EAAQiK,OAA1C,UACE,qBAAK/F,GAAG,UAAUzD,UAAWT,EAAQ8K,UAGrC,sBAAK5G,GAAG,SAASzD,UAAWT,EAAQqL,gBAApC,UACA,cAACxK,EAAA,EAAD,CAAYJ,UAAWT,EAAQiL,QAA/B,0BACA,cAACpK,EAAA,EAAD,CAAYJ,UAAWT,EAAQkL,cAA/B,qCACA,cAACrK,EAAA,EAAD,CAAYJ,UAAWT,EAAQmL,aAA/B,+CAMA,cAAC1H,EAAA,EAAD,CAAK2I,OAAK,EAACC,MAAO,CAAEC,GAAI,EAAIC,GAAI,GAAhC,SACA,cAACL,EAAA,EAAD,CAAMlI,MAAI,EAACsI,GAAI,GAAIC,GAAI,EAAG9L,UAAWT,EAAQ6K,KAA7C,SAEC,eAACjD,EAAA,EAAD,CAAOnH,UAAWT,EAAQwK,WAA1B,UACA,cAAC3J,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACG,cAACD,EAAA,EAAD,CAAYJ,UAAWT,EAAQ4K,SAAU9J,QAAQ,YAAjD,6EACCgL,EAAQ,cAACjL,EAAA,EAAD,CAAYC,QAAS,YAArB,gDAAmF,KAC5F,uBAAM2E,OAAO,GAAb,UACA,cAAC+G,EAAA,EAAD,CAAO/L,UAAWT,EAAQ0B,MAAOiE,WAAS,EAACC,YAAY,WAAW1D,SAAU8J,EAAa1G,KAAK,WAAWC,MAAOqG,EAAMvK,WACtH,cAACmL,EAAA,EAAD,CAAOvK,KAAK,WAAWxB,UAAWT,EAAQ0B,MAAOiE,WAAS,EAACC,YAAY,WAAW1D,SAAU8J,EAAa1G,KAAK,WAAWC,MAAQqG,EAAMD,WACxI,cAACrJ,EAAA,EAAD,CAAQL,KAAK,SAASxB,UAAWT,EAAQ2K,IAAK5E,KAAK,QAAQjF,QAAQ,YAAY/B,MAAM,UAAU2B,QAnDvF,SAAC6B,GAEpBA,EAAE0D,iBAIFsF,EAAYlH,QAAO,SAAAoI,GACZA,EAAOrL,MAAMC,WAAauK,EAAMvK,UAAYoL,EAAOrL,MAAMuK,WAAaC,EAAMD,UAC3EvL,aAAasM,QAAQ,SAAUxM,KAAKiJ,UAAUsD,IAC9CjB,EAAQmB,KAAK,mBAEbZ,GAAS,OAwCN,qCC3LLvO,EAAYC,YAAW,CACzBkN,IAAK,CACDjL,SAAW,GACXtB,gBAAiB,SACjBM,aAAc,GACdP,QAAS,GACTY,MAAO,QACPJ,OAAQ,IAEZiO,IAAK,CACDxO,gBAAiB,QACjBD,QAAS,GACTO,aAAc,GACd+L,SAAS,IACT9L,OAAQ,OACRkO,WAAY,GACZhP,OAAQ,QAEZiP,WAAW,CACPpO,aAAc,GACdL,MAAO,OAEXwM,KAAK,CACD1M,QAAS,IAEbmH,KAAK,CACDnH,QAAS,IAEb4O,MAAM,CACFhG,aAAc,aACd5I,QAAS,GACT0B,WAAY,CAAC,SAAS,cAAciH,QAExCkG,GAAG,KAyEQC,EAhEC,SAAC,GAAmB,IAAlB1B,EAAiB,EAAjBA,YAERtL,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WAEhDL,EAAUxC,IACd,EAAsC8C,mBAAS,IAA/C,mBAAO4M,EAAP,KAAoBC,EAApB,KAeA,OACI,qCACA,cAAC,EAAD,IACA,sBAAK1M,UAAWT,EAAQgN,GAAxB,UAEA,cAACnM,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBACA,cAAC4E,EAAA,EAAD,CAAWxD,SAdK,SAACK,GACjB,IAAM6K,EAAa7K,EAAEH,OAAOmD,MAExB4H,EAAeC,IAWgBxH,YAAY,wBAEtD,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAACkB,QAAS,EAAG3C,WAAW,SAASjK,UAAWT,EAAQ6K,KAAnE,SAIQU,EAAYlH,QAAO,SAAAiJ,GAChB,MAAgB,IAAbJ,GAEOI,EAAIhI,KAAKiI,MAAMC,cAAcC,SAASP,EAAYM,eADjDF,OACJ,KAGRvJ,KAAI,SAAC0I,EAAQ3D,GACZ,GAAG2D,EAAOrL,MAAMC,UAAYpB,EAAYmB,MAAMC,SAC9C,OACI,cAAC6K,EAAA,EAAD,CAAehI,GAAI4E,EAAI9E,MAAI,EAACsI,GAAI,GAAKoB,GAAI,EAAGC,GAAI,EAAhD,SAEA,cAAC,IAAD,CAAMhN,MAAO,CAAEa,eAAgB,QAAUD,GAAE,yBAAoBkL,EAAOrL,MAAMC,UAA5E,SACA,eAACuG,EAAA,EAAD,CAAOnH,UAAWT,EAAQ4M,IAA1B,UACA,qBAAKnM,UAAWT,EAAQ8M,WAAY9L,IAAKyL,EAAOxL,QAAQ2M,MAAOzM,IAAI,KACpE,eAACN,EAAA,EAAD,CAAYJ,UAAWT,EAAQsF,KAAMxE,QAAQ,KAA7C,cAAoD2L,EAAOnH,KAAKiI,MAAQ,IAAMd,EAAOnH,KAAKuI,QAC1F,cAAChN,EAAA,EAAD,CAAYC,QAAQ,QAAQL,UAAWT,EAAQ+M,MAA/C,SAAuDN,EAAOM,cANjDjE,e,oBCnFtBtL,GAAYC,YAAW,CAErBqQ,KAAK,CACD1P,gBAAiB,QACjBW,MAAO,QACPJ,OAAQ,QAGZoP,IAAI,CACApP,OAAO,OACPe,SAAU,OACVI,WAAY,QAEhBkO,MAAM,CACF3P,MAAO,QACPM,OAAO,QAIXsP,IAAI,CACAvP,aAAc,OAElBwP,SAAS,CACLnP,MAAM,gBA6HHoP,GAtHF,SAAC,GAA4F,IAA3F5C,EAA0F,EAA1FA,YAAahC,EAA6E,EAA7EA,WAAYzH,EAAiE,EAAjEA,YAKnCT,GALoG,EAApD+H,cAAoD,EAArCI,cAAqC,EAAtBhB,iBAKlEqB,cAAZxI,UAEL0B,QAAQC,IAAI3B,GACZ,IAAM+M,EAAUtJ,cAEV9E,EAAUxC,KAGhB,EAA0B8C,mBAAS,OAAnC,mBAAOiF,EAAP,KAAc8I,EAAd,KACA,EAAkC/N,mBAASe,GAA3C,mBAEMgE,GAFN,UAEqB,SAAClD,EAAOmM,GAC3BD,EAASC,KAKP,OACI,gCAKI,cAACzN,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACKyK,EAAYlH,QAAO,SAAAoI,GACpB,GAAGA,EAAOrL,MAAMC,WAAaA,EAC7B,OAAOoL,KACR1I,KAAI,SAACwK,EAAezF,GACnB,IAGM0F,EAFM,+BADCD,EAAcE,IAEZ,eAKf,OAKI,eAAC7G,EAAA,EAAD,CAAsB1D,GAAIkK,EAAU3N,UAAWT,EAAQgO,MAAvD,UAA8D,eAACnN,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0ByN,EAAcjJ,KAAKiI,MAAQ,IAAMgB,EAAcjJ,KAAKuI,KAA9E,OAC9D,eAAC3B,EAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACD,EAAA,EAAD,CAAMlI,MAAI,EAACsI,GAAI,EAAf,SACA,eAAC7I,EAAA,EAAD,WACA,eAAC5C,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0ByN,EAAcnN,MAAMC,SAA9C,OACA,qBAAKZ,UAAWT,EAAQiO,IAAKjN,IAAKuN,EAActN,QAAQ2M,MAAOzM,IAAI,UAInE,eAAC+K,EAAA,EAAD,CAAMlI,MAAI,EAACsI,GAAI,EAAf,UACA,cAACzL,EAAA,EAAD,UAAa0N,EAAcG,SAASC,MAAQ,KAAMJ,EAAcG,SAASE,UACzE,qBAAM5N,IAAKwN,EAASrN,IAAI,WAGxB,eAACsC,EAAA,EAAD,CAAKC,GAAI,CAAErF,MAAO,QAAlB,UAEA,eAACwQ,GAAA,EAAD,CACItJ,MAAOA,EACPrD,SAAUmD,EACVyJ,UAAU,UACVC,eAAe,UACfC,aAAW,eACXvO,UAAWT,EAAQ8N,KANvB,UASI,cAACmB,GAAA,EAAD,CAAKxO,UAAWT,EAAQ+N,IAAKxI,MAAM,MAAMM,MAAM,UAG/C,cAACoJ,GAAA,EAAD,CAAKxO,UAAWT,EAAQ+N,IAAKxI,MAAM,MAAMM,MAAM,WAE/C,cAACoJ,GAAA,EAAD,CAAKxO,UAAWT,EAAQ+N,IAAKxI,MAAM,QAAQM,MAAM,eAGtC,QAATN,EAAiBgE,EAAWlF,QAAO,SAAA2F,GACjC,GAAGA,EAAS/E,iBAAmB5D,EAC/B,OAAO2I,KAERjG,KAAI,SAAAiG,GACH,OACG,eAAC,IAAD,CAAwB9F,GAAI8F,EAAS9F,GAAI3C,GAAE,uBAAkByI,EAAS9F,IAAMvD,MAAO,CAACa,eAAe,QAAnG,cAA6G,cAACX,EAAA,EAAD,CAAYJ,UAAWT,EAAQkO,SAAUpN,QAAQ,KAAjD,SAAwDkJ,EAASjF,UAAnKiF,EAAS9F,OAEtB,KAEM,QAATqB,EAAiBzD,EAAYuC,QAAO,SAACC,GAEnC,GADAvB,QAAQC,IAAIsB,EAAUd,eACnBc,EAAUd,gBAAkBnC,EAC3B,OAAOiD,KAEZP,KAAI,SAAAO,GACH,OACI,cAACb,EAAA,EAAD,CAAK9C,MAAO,CAACC,QAAS,QAAtB,SAED,qBAAKD,MAAO,CAACtC,MAAO,QAAS2C,IAAKsD,EAAUf,SAAUpC,IAAI,UAI5D,UAxDGiN,UCjF1B5Q,GAAYC,YAAW,CACzByR,UAAU,CACN7Q,MAAO,QACPT,SAAU,WACVG,IAAK,MACLC,KAAM,MACNmB,UAAW,wBACXhB,QAAS,UA2BFgR,GAtBI,WAEf/O,aAAagP,QAEDC,YAAW,WACnBC,OAAOZ,SAAS,sCACjB,KAFH,IAIE1O,EAAUxC,KACZ,OACI,8BACI,eAACoK,EAAA,EAAD,CAAOnH,UAAWT,EAAQkP,UAAWrH,UAAW,GAAhD,UACA,cAAChH,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACA,eAAC2C,EAAA,EAAD,CAAKC,GAAI,CAAEjF,OAAQ,uBAAwB8Q,EAAE,EAAG7Q,aAAc,QAA9D,UACI,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAApB,oCACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,sC,6BCdVpD,GAAQ8R,aAAY,CAExBC,WAAY,CACV5P,WAAY,CACV,cACA,WACAiH,KAAK,MAGT4I,MAAM,CACJ7P,WAAY,CAAC,SAAS,cAAciH,UA6HzB6I,OAvHf,WAIE,MAAsCrP,mBAAS,IAA/C,mBAAOiL,EAAP,KAAoBqE,EAApB,KACA,EAAoCtP,mBAAS,IAA7C,mBAAOiJ,EAAP,KAAmBC,EAAnB,KACA,EAA0ClJ,mBAAS,IAAnD,mBAAO8I,EAAP,KAAsBZ,EAAtB,KACA,EAAsClI,mBAAS,IAA/C,mBAAOwB,EAAP,KAAoB+N,EAApB,KACA,EAA0BvP,mBAAS,IAAnC,mBAAOqJ,EAAP,KAAcmG,EAAd,KACA,EAA4BxP,mBAAS,IAArC,mBAAOuB,EAAP,KAAekO,EAAf,KAIA,SAAStG,EAAQuG,GACfF,GAAS,SAAAG,GACR,MAAM,CAAED,GAAR,mBAAoBC,OAErBxH,MAAM,uCAAwC,CAC5CC,OAAQ,OACRO,QAAS,CAAC,eAAgB,oBAC1BC,KAAMhJ,KAAKiJ,UAAU6G,KAMzB,SAAStG,EAAWxF,GAElB4L,GAAS,SAAAG,GACP,OAAOA,EAAU5L,QAAO,SAAC0F,GACvB,OAAOA,EAAS7F,KAAOA,QAI3BsF,GAAc,SAAAyG,GACZ,OAAOA,EAAU5L,QAAO,SAAC0F,GACvB,OAAOA,EAAS7F,KAAOA,QAI3BuE,MAAM,uCAAuCvE,EAAI,CAC/CwE,OAAQ,WAMZ,SAAS9G,EAASwB,GAChB2M,GAAU,SAACG,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAsB9M,OAExBqF,MAAM,wCAAyC,CAC7CC,OAAQ,OACRO,QAAS,CAAC,eAAgB,oBAC1BC,KAAMhJ,KAAKiJ,UAAU/F,KA8CzB,OAPA+M,qBAAU,YAhCQ,WAChB,IAKMC,EAAWC,IAAMC,IALN,wCAMXC,EAAWF,IAAMC,IALN,wCAMXE,EAAcH,IAAMC,IALN,2CAMdG,EAAYJ,IAAMC,IALN,yCAOtBD,IAAMK,IAAI,CAACN,EAAUG,EAAUC,EAAaC,IAAY5N,KACtDwN,IAAMM,QAAO,WACX,IACMC,EAAa,UAAD,8BACZC,EAAgB,UAAD,8BACfC,EAAa,wCAKnBlB,GARkB,yCAQU3M,KAAK8N,WACjCvH,EAAcoH,EAAa3N,KAAK8N,WAChCvI,EAAiBqI,EAAgB5N,MACjC4M,EAAeiB,EAAc7N,KAAK8N,eASlCC,KACA,IAKM,mCACR,cAACC,GAAA,EAAD,CAAevT,MAAOA,GAAtB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOwT,KAAK,UAAUC,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,CAAW7F,YAAaA,OAClE,cAAC,IAAD,CAAO2F,KAAK,eAAeC,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,CAAW7H,WAAYA,EAAYI,MAAOA,EAAOP,cAAeA,EAAeI,cAAeA,EAAehB,iBAAkBA,EAAkBiB,QAASA,EAASC,WAAYA,OAC9N,cAAC,IAAD,CAAOwH,KAAK,iBAAiBC,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,CAAU7F,YAAaA,OACxE,cAAC,IAAD,CAAO2F,KAAK,gBAAgBE,OAAQ,kBAAM,cAAC,EAAD,CAAQxP,SAAUA,EAAUC,OAAQA,EAAQC,YAAaA,OACnG,cAAC,IAAD,CAAOoP,KAAK,uBAAwBE,OAAQ,kBAAM,cAAC,EAAD,CAAW7H,WAAYA,EAAYI,MAAOA,EAAOP,cAAeA,EAAeI,cAAeA,EAAehB,iBAAkBA,EAAkBiB,QAASA,EAASC,WAAYA,OACjO,cAAC,IAAD,CAAOwH,KAAK,2BAA2BE,OAAQ,kBAAM,cAAC,GAAD,CAAM7F,YAAaA,EAAahC,WAAYA,EAAYzH,YAAaA,EAAasH,cAAeA,EAAeI,cAAeA,EAAehB,iBAAkBA,OACrN,cAAC,IAAD,CAAO0I,KAAK,gBAAgBE,OAAQ,kBAAM,cAAC,GAAD,iBCpI/BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1O,MAAK,YAAkD,IAA/C2O,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.a14cf208.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Typography, List, ListItem, Avatar} from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport MenuTwoToneIcon from '@material-ui/icons/MenuTwoTone';\r\n\r\n\r\nconst useStyles = makeStyles( theme => { \r\n    return {\r\n    nav:{\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    overflowX: \"hidden\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"100\",\r\n    borderRight: \"2px solid dodgerblue\",\r\n    padding: \"0 10px\",\r\n    backgroundColor: \"aliceblue\",\r\n    width: \"225px\",\r\n    },\r\n\r\n    navHeading:{\r\n        marginTop: \"50px\"\r\n    },\r\n\r\n    navBtn:\r\n    {\r\n        border: \"2px solid dodgerblue\",\r\n        borderRadius: \"10px\",\r\n        padding: \"15px\",\r\n        margin: \"5px 10px 5px 5px\",\r\n        justifyContent: \"space-between\",\r\n        \"&:hover\" : {\r\n        backgroundColor: \"dodgerblue\",\r\n        transition: \"ease-in\",\r\n        transitionDuration: \"150ms\",\r\n        color: \"white\",\r\n        \r\n       \r\n        }\r\n    },\r\n     navIcon : {\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      position: \"absolute\",\r\n      marginRight: \"5px\",\r\n      right: \"0\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      backgroundColor: \"white\",\r\n      borderRadius: \"50%\",\r\n      padding: \"5px\"\r\n    },\r\n\r\n    navBtnList:{\r\n        paddingRight: \"10px\"\r\n    },\r\n\r\n    logoutBtn:{\r\n        marginTop: \"50vh\"\r\n    },\r\n    menuBtn:{\r\n        textAlign:\"left\",\r\n        cursor: \"pointer\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        zIndex: \"101\",\r\n        fontSize:\"40px\",\r\n        \r\n    },\r\n    navImg:{\r\n        margin: \"auto\"\r\n    },\r\n\r\n    navBtnText:{\r\n        fontFamily: \"Roboto\",\r\n        fontWeight: \"600\"\r\n    }\r\n    }\r\n  })\r\n\r\nconst Nav = () => {\r\n\r\n   const classes = useStyles();\r\n\r\n const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n \r\nconst [isMenuVisible, setMenuVisible] = useState(false)\r\n\r\nconst hideShowMenu = () =>{\r\n\r\n    if(isMenuVisible == true){\r\n        setMenuVisible(false);\r\n    }\r\n    else if(isMenuVisible ==false){\r\n        setMenuVisible(true);\r\n    }\r\n    \r\n}\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n        \r\n<MenuTwoToneIcon className={classes.menuBtn} onClick={hideShowMenu}/>\r\n        <div style={{display: isMenuVisible ? \"inline-block\" : \"none\"}} className={classes.nav}>\r\n       \r\n        <Typography variant=\"h2\" className={classes.navHeading} >So-Me</Typography>\r\n        <Avatar className={classes.navImg} src={currentUser.picture.medium} alt=\"\"/>\r\n        <Typography variant=\"subtitle1\">{currentUser.login.username}</Typography>\r\n        \r\n            <List className={classes.navBtnList}>\r\n                \r\n                  \r\n              \r\n            <Link to=\"/so-me/friends\" style={{ textDecoration: 'none', color:\"dodgerblue\"}} >\r\n            <ListItem className={classes.navBtn}> \r\n           <Typography className={classes.navBtnText}>Friends </Typography>  <i className=\"fas fa-user-friends\"></i>\r\n            </ListItem>\r\n            </Link>\r\n            <Link to=\"/so-me/posts\" style={{ textDecoration: 'none', color:\"dodgerblue\" }}>   \r\n            <ListItem className={classes.navBtn}>  \r\n            <Typography className={classes.navBtnText}>Posts </Typography> <i className=\"far fa-newspaper\"></i>\r\n            </ListItem>\r\n            </Link>\r\n            <Link to =\"/so-me/photos\" style={{ textDecoration: 'none', color:\"dodgerblue\" }}>\r\n            <ListItem className={classes.navBtn}>\r\n          <Typography className={classes.navBtnText}> Photos </Typography> <i className=\"fas fa-images\"></i>\r\n            </ListItem>\r\n            </Link>\r\n           <Link to=\"/so-me/logout\" style={{ textDecoration: 'none', color:\"dodgerblue\" }}>\r\n           <ListItem className={classes.navBtn} style={{marginTop: \"50vh\" }}> \r\n           <Typography className={classes.navBtnText}> Logout </Typography> <i className=\"fas fa-sign-out-alt\"></i>\r\n           </ListItem>\r\n           </Link>\r\n            </List>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from \"axios\"\r\nimport { Image } from \"cloudinary-react\"; \r\nimport Nav from \"../components/Nav\"\r\nimport {Typography, ImageList, ImageListItem, Box, Button, Card} from \"@material-ui/core\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  input:{\r\n    \r\n    margin: \"auto\",\r\n    padding: \"10px\",\r\n    borderRadius: \"10px\",\r\n    fontFamily: \"Roboto, cursive\"\r\n  }\r\n  \r\n  })\r\n\r\n\r\nconst Photos = ({addPhoto, photos, usersPhotos}) => {\r\n\r\n  const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\nconst classes= useStyles();\r\n\r\nconst [imageSelected, setImageSelected] = useState(\"\");\r\nconst [imageURLs, setImageURLs]= useState([]);\r\nconst [photo, setPhoto] = useState(\"\");\r\nconst [itemData, setItemData] = useState(\"\")\r\n\r\n\r\n\r\n// const addURL = (newURL) =>{\r\n//     setImageURLs( prevURLs =>{\r\n//       return [...prevURLs, newURL];\r\n//     } )\r\n// }\r\n\r\nconst uploadImage = (e) =>{\r\n  const formData = new FormData()\r\n    formData.append(\"file\", imageSelected)\r\n    formData.append(\"upload_preset\", \"iq5xsc7g\")\r\n\r\n    Axios.post(\"https://api.cloudinary.com/v1_1/dly13wqwx/image/upload\", formData).then((response)=>{\r\n      console.log(response.data)\r\n      const photoURL = response.data.secure_url;\r\n      const photoId = response.data.asset_id;\r\n      const newPhoto = {\r\n          imageId: photoId,\r\n          imageURL: photoURL,\r\n          photoUploader: currentUser.login.username\r\n        };\r\n      \r\n     \r\n      addPhoto(newPhoto);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Nav/>\r\n            <Typography variant=\"h2\">Photos</Typography>\r\n        \r\n\r\n        \r\n            \r\n      \r\n    <input className={classes.input} type=\"file\" onChange={((event)=>{\r\n  setImageSelected(event.target.files[0]);\r\n})} />\r\n\r\n<Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={uploadImage}>Upload image</Button>\r\n\r\n<Box sx={{ width: 800, height: 900, overflowY: 'scroll', margin:\"auto\" }}>\r\n\r\n      <ImageList variant=\"masonry\" cols={3} gap={10}>\r\n        {photos.map((item) => (\r\n          <ImageListItem key={item.imageId} id={item.imageId}>\r\n            <img\r\n              src={`${item.imageURL}?w=248&fit=crop&auto=format`}\r\n              srcSet={`${item.imageURL}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n              alt={item}\r\n              loading=\"lazy\"\r\n            />\r\n          </ImageListItem>\r\n        ))};\r\n\r\n        {usersPhotos.filter((userPhoto)=>{\r\n          if(userPhoto.photoUploader === currentUser.login.username)\r\n          return userPhoto;\r\n        \r\n        }).map((item) => (\r\n          <ImageListItem key={item.imageId} id={item.imageId}>\r\n            <img\r\n              src={`${item.imageURL}?w=248&fit=crop&auto=format`}\r\n              srcSet={`${item.imageURL}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n              alt={item}\r\n              loading=\"lazy\"\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n     \r\n    </Box>\r\n\r\n  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React, {useState} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    submitBtn:{\r\n        margin: \"25px\",\r\n        backgroundColor: \"dodgerblue\", \r\n        color: \"white\",\r\n        \"&:hover\": {\r\n            backgroundColor: 'dodgerblue'\r\n          }\r\n    },\r\n    textBox:{\r\n        backgroundColor:\"aliceblue\",\r\n        margin: \"10px 0\"\r\n      }\r\n})\r\n\r\n\r\nfunction CreatePost (props) {\r\n\r\nconst classes = useStyles()\r\n\r\nconst currentDate = new Date().toLocaleString();\r\n \r\n//set key id to empty string in post object\r\n\r\n\r\n\r\n\r\n    const [post, setPost] = useState({\r\n        id: uuidv4(),\r\n        title: \"\",\r\n        content: \"\",\r\n        posterUsername: props.posterUsername,\r\n        avatar: props.avatar,\r\n        timestamp: currentDate\r\n    })\r\n\r\n\r\n  // When submit post button is clicked, call the onAdd function and prevent refresh. The value of content is also cleared\r\n  function submitPost(e){\r\n    props.onAdd(post);\r\n    e.preventDefault();\r\n    setPost({\r\n        id: uuidv4(),\r\n        title: \"\",\r\n        content: \"\",\r\n        posterUsername: props.posterUsername,\r\n        avatar: props.avatar,\r\n        timestamp: currentDate\r\n    });\r\n}\r\n\r\n\r\n  //get name and value of the event and then update \"content\" value in post state\r\n\r\n    function handleChange (event) {\r\n        const {name, value} = event.target;\r\n          setPost(prevPost => {\r\n           \r\n            return{\r\n                ...prevPost,\r\n                [name]:value\r\n            };\r\n        }); \r\n    }\r\n\r\n  \r\n\r\n    return(\r\n        <div>\r\n            <form action=\"\">\r\n            <TextField\r\n                fullWidth\r\n                placeholder= \"Enter post title\" \r\n                name=\"title\"\r\n                value={post.title} \r\n                onChange={handleChange}\r\n                id=\"filled-textarea\"\r\n                variant=\"filled\"\r\n                label=\"Title\"\r\n                className={classes.textBox}\r\n                \r\n                />\r\n                \r\n               \r\n                <TextField\r\n                fullWidth\r\n                placeholder= \"Enter post content\" \r\n                name=\"content\"\r\n                value={post.content} \r\n                onChange={handleChange}\r\n                id=\"filled-textarea\"\r\n                multiline\r\n                variant=\"filled\"\r\n                label=\"Content\"\r\n                className={classes.textBox}\r\n                \r\n                />\r\n                <Button className={classes.submitBtn}  variant=\"contained\" size=\"medium\" name=\"submit-post\" type=\"submit\" onClick={submitPost}>Submit post</Button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import React, {useState} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\" \r\n\r\nconst useStyles = makeStyles({\r\n\r\n   submitCommentBtn:{\r\n       margin: \"10px 0\", \r\n       backgroundColor: \"dodgerblue\", \r\n       color: \"white\",\r\n       \"&:hover\": {\r\n        backgroundColor: 'dodgerblue'\r\n      }\r\n\r\n   }\r\n   \r\n})\r\n\r\nconst CreateComment = (props) =>{\r\n\r\n    const classes = useStyles();\r\n    const currentDate = new Date().toLocaleString();\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\nconst commentOwner =props.commentBelongsTo;\r\n\r\n\r\n    // set comment content to blank string\r\n    const[comment, setComment] = useState({\r\n        id: uuidv4(),\r\n        commentContent: \"\",     \r\n        commentOwner: commentOwner,\r\n        commentPostedBy : currentUser.login.username,\r\n        commentAvatar: currentUser.picture.medium,\r\n        commentTimestamp: currentDate\r\n    });\r\n\r\n\r\n    //submitComment function will prevent refresh add the comment to the comments array and \r\n    function submitComment(e){\r\n        props.onAdd(comment);\r\n        e.preventDefault();\r\n        setComment({\r\n            id: uuidv4(),\r\n            commentContent: \"\",\r\n            commentOwner: commentOwner,   \r\n            commentPostedBy : currentUser.login.username,\r\n            commentAvatar: currentUser.picture.medium,\r\n            commentTimestamp: currentDate\r\n        });\r\n    };\r\n\r\n        //get name and value of the event and then update \"content\" value in comment state\r\n    const handleChangeComment =(event) =>{\r\n        const {name, value} = event.target;\r\n        console.log(comment)\r\n        setComment(prevComment => {\r\n            return{\r\n                ...prevComment,\r\n                [name]:value\r\n            };\r\n        });\r\n    };    \r\n\r\n\r\n    \r\n\r\n    return(\r\n        \r\n        <div className=\"comment-input\">\r\n        <form action=\"\">\r\n        <TextField \r\n        name=\"commentContent\" \r\n        value={comment.commentContent} \r\n        fullWidth\r\n        placeholder=\"Enter a comment\" \r\n        multiline\r\n        variant=\"filled\"\r\n        label=\"New comment\"\r\n        onChange={handleChangeComment}>\r\n        </TextField>\r\n        <Button \r\n        className={classes.submitCommentBtn}\r\n        name=\"submit-comment\" \r\n        type=\"submit\" \r\n        variant=\"contained\"\r\n        onClick={submitComment}>Submit comment</Button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateComment;","import React from \"react\";\r\nimport { FcLike, FcFullTrash, FcLikePlaceholder} from \"react-icons/fc\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport { Paper, Button, Typography, Avatar } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport { MdDeleteForever} from \"react-icons/md\";\r\n\r\nconst useStyles = makeStyles(theme =>{\r\n  return{\r\n    postContent:{\r\n     fontFamily: ['Roboto','sans-serif'].join(),\r\n     fontWeight: \"600\",\r\n     overflowWrap: \"break-word\"\r\n    },\r\n\r\n    avatar:{\r\n      zIndex: \"10\"\r\n    },\r\n\r\n    name:{\r\n      backgroundColor: \"dodgerblue\",\r\n      borderRadius: \"0 10px 10px 0\",\r\n      padding: \"3px 25px 3px 25px\",\r\n      alignSelf: \"center\",\r\n      color: \"white\",\r\n      left: \"20px\",\r\n      position: \"absolute\",\r\n      zIndex: \"9\"\r\n    },\r\n\r\n    profileInfo:{\r\n      display:\"flex\",\r\n      position: \"relative\",\r\n      top: \"20px\"\r\n    },\r\n\r\n    contentBox:{\r\n      padding: \"30px\",\r\n      textAlign: \"justify\",\r\n      marginBottom: \"20px\",\r\n      position: \"relative\"\r\n    },\r\n\r\n    commentHolder:{\r\n      width: \"90%\",\r\n      marginLeft: \"auto\"\r\n    },\r\n    delIcon:{\r\n      top: \"0\",\r\n      right: \"0\",\r\n      position: \"absolute\",\r\n      transform: \"translateY(-50%)\"\r\n     },\r\n     date:{\r\n      top: \"100%\",\r\n    left: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"white\",\r\n    display: \"inline\",\r\n    padding: \"8px\",\r\n    position: \"absolute\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"darkcyan\",\r\n    whiteSpace: \"nowrap\",\r\n    fontFamily: \"Roboto, cursive\",\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n           left: \"50%\"\r\n    }   \r\n    }\r\n  }\r\n\r\n}) \r\n\r\nconst Comment = (props) => {\r\n\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n\r\n  const classes = useStyles()\r\n\r\n    function handleClick(){\r\n     console.log(props.id)\r\n        props.onDelete(props.id, props.commentBelongsTo);\r\n}\r\nreturn(\r\n  <div className={classes.commentHolder}>\r\n  <div className={classes.profileInfo}>\r\n  <Avatar className={classes.avatar} src={props.commentAvatar} alt=\"\"/>\r\n  <Typography className={classes.name} variant=\"h5\">{props.commentPostedBy}</Typography>\r\n  </div>\r\n <Paper className={classes.contentBox} elevation ={12}>\r\n {currentUser.login.username === props.commentPostedBy ? <TiDelete className={classes.delIcon} style={{cursor: \"pointer\", fontSize: \"40px\", color:\"#bd1604\"}} onClick={handleClick}/> : null}\r\n  <p className={classes.postContent}>{props.content}</p>\r\n  <Typography className={classes.date}>{props.commentTimestamp}</Typography>\r\n </Paper>\r\n </div>\r\n)\r\n}\r\n\r\nexport default Comment;","import React,{useState}  from \"react\";\r\nimport { AiFillLike } from \"react-icons/ai\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport CreateComment from \"../components/CreateComment\";\r\nimport Comment from \"../components/Comment.js\";\r\nimport { Paper, Button, Typography, Avatar, Box } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\n\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme =>{\r\n  return{\r\n    postContent:{\r\n     fontFamily: ['Roboto','sans-serif'].join(),\r\n     fontWeight: \"600\",\r\n     overflowWrap: \"break-word\"\r\n    },\r\n\r\n    avatar:{\r\n      zIndex: \"10\"\r\n    },\r\n\r\n    date:{\r\n      top: \"100%\",\r\n    left: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"white\",\r\n    display: \"inline\",\r\n    padding: \"8px\",\r\n    position: \"absolute\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"darkcyan\",\r\n    whiteSpace: \"nowrap\",\r\n    fontFamily: \"Roboto\",\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      left: \"50%\"\r\n}   \r\n    },\r\n\r\n    name:{\r\n      backgroundColor: \"dodgerblue\",\r\n      borderRadius: \"0 10px 10px 0\",\r\n      padding: \"3px 25px 3px 25px\",\r\n      alignSelf: \"center\",\r\n      color: \"white\",\r\n      left: \"20px\",\r\n      position: \"absolute\",\r\n      zIndex: \"9\"\r\n    },\r\n\r\n    profileInfo:{\r\n      display:\"flex\",\r\n      position: \"relative\",\r\n      top: \"20px\"\r\n    },\r\n\r\n    contentBox:{\r\n      padding: \"30px\",\r\n      textAlign: \"justify\",\r\n      marginBottom: \"20px\",\r\n      position: \"relative\"\r\n    },\r\n    delIcon:{\r\n     top: \"0\",\r\n     right: \"0\",\r\n     position: \"absolute\",\r\n     transform: \"translateY(-50%)\"\r\n    }\r\n  }\r\n\r\n}) \r\n\r\nfunction Post(props){\r\n\r\n\r\nconst classes = useStyles()\r\n\r\n// set comments to empty array       \r\nconst [comments, setComments] = useState([]);    \r\n\r\n//set isLikeClicked state to false so like button is not shown as clicked\r\nconst[isLikeClicked, setIsLikeClicked] = useState(false);\r\n\r\n\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n \r\n\r\n\r\n// addComment function setsComments state to return all previous comments and latest comment\r\nfunction addComment(newComment){\r\n \r\n  \r\n  setComments(prevComments =>{\r\n   return [...prevComments, newComment ];\r\n  })\r\n\r\n  \r\n\r\n  \r\n\r\n  fetch(\"https://so-me-db.herokuapp.com/comments/\", {\r\n    method: \"POST\",\r\n    headers: {\"Content-type\": \"application/json\"},\r\n    body: JSON.stringify(newComment)\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// deleteComment function returns only comments \r\nfunction deleteComment(id){\r\n  console.log(id)\r\n        setComments(prevComments =>{\r\n          return prevComments.filter((commentItem, index)=> {\r\n            \r\n            return commentItem.id !== id;\r\n          })\r\n        })\r\n\r\n        props.setUsersComments(prevComments =>{\r\n          return prevComments.filter((commentItem, index)=> {\r\n            \r\n            return commentItem.id !== id;\r\n          })\r\n        })\r\n        \r\n        fetch(\"https://so-me-db.herokuapp.com/\"+id, {\r\n        method: \"DELETE\",\r\n      })\r\n        \r\n      }\r\n\r\n\r\n\r\n//set date in todayDate state\r\n\r\n\r\nconst [like, setLike] = useState(\"Like\")\r\n\r\n\r\n\r\n\r\n// function countLike(){\r\n//         setLike(like+1);        \r\n// }      \r\n      \r\n\r\n//handleClick function will call the onDelete function and take in the post id\r\nfunction handleClick(){\r\n        props.onDelete(props.id);\r\n        // setTodayDate(date);\r\n}        \r\n\r\n\r\n// change color of like icon when clicked\r\nfunction changeColor(){\r\n setIsLikeClicked(true)\r\n setLike(\"You liked this post\");\r\n\r\n}\r\n\r\n\r\nreturn(<>\r\n     \r\n        <Box className={classes.profileInfo} >\r\n         <Avatar className={classes.avatar} src={props.avatar} alt=\"\"/>\r\n         <Typography className={classes.name} variant=\"h5\">{props.posterUsername}</Typography>\r\n         </Box>\r\n        <Paper className={classes.contentBox} elevation ={12}>\r\n      { props.posterUsername === currentUser.login.username ? <TiDelete className={classes.delIcon} style={{cursor: \"pointer\", fontSize: \"40px\", color:\"#bd1604\"}} onClick={handleClick}/> : null}\r\n        <Typography variant=\"h6\">{props.title}</Typography>\r\n         <p className={classes.postContent}>{props.content}</p>\r\n         <AiFillLike style={ {color: isLikeClicked ? \"red\" : \"black\"}} size={25} onClick={changeColor}/><span>{like}</span>\r\n         <Typography className={classes.date}>{props.timestamp}</Typography>\r\n        </Paper>\r\n        \r\n\r\n\r\n{/* map though all coomments and display them */}\r\n        {comments.map((commentItem, i) => {\r\n         return (<Comment\r\n          key={commentItem.id}\r\n          id ={commentItem.id}\r\n          content={commentItem.commentContent}\r\n          commentPostedBy ={commentItem.commentPostedBy}\r\n          commentAvatar ={commentItem.commentAvatar}\r\n          commentTimestamp = {commentItem.commentTimestamp}\r\n          onDelete={deleteComment}\r\n          changeColor ={changeColor}\r\n          commentBelongsTo ={props.postId}\r\n          isLikeClicked={isLikeClicked}\r\n          like ={like}\r\n         />\r\n         );\r\n         })}\r\n\r\n        <CreateComment\r\n          onAdd={addComment}   \r\n          commentBelongsTo ={props.postId}   \r\n        />\r\n\r\n{props.usersComments.filter((commentItem)=>{\r\n  \r\n  return commentItem.commentOwner === props.postId \r\n  \r\n}).map((commentItem, i) => {\r\n         return (<Comment\r\n          key={commentItem.id}\r\n          id ={commentItem.id}\r\n          content={commentItem.commentContent}\r\n          commentPostedBy ={commentItem.commentPostedBy}\r\n          commentAvatar ={commentItem.commentAvatar}\r\n          commentTimestamp = {commentItem.commentTimestamp}\r\n          onDelete={deleteComment}\r\n          changeColor ={changeColor}\r\n          commentBelongsTo ={props.postId}\r\n          isLikeClicked={isLikeClicked}\r\n          like ={like}\r\n         />\r\n         );\r\n         })}\r\n\r\n        \r\n         \r\n        \r\n\r\n</>)\r\n\r\n}\r\n\r\nexport default Post;","import React,{useState} from \"react\";\r\nimport CreatePost from \"../components/CreatePost\"\r\nimport Post from \"../components/Post\"\r\nimport Nav from \"../components/Nav\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport {Typography} from \"@material-ui/core\"\r\nimport {useParams, Link} from \"react-router-dom\"\r\n\r\nconst useStyles=makeStyles({\r\n  postsTitle : {\r\n    backgroundColor:\"aliceblue\",\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  \r\n})\r\n\r\nconst PostsPage = ({ usersPosts, usersComments, setUsersPosts, setUsersComments, addPost, deletePost, posts}) =>{\r\n\r\n \r\nconst classes=useStyles();\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n  //set state of posts constant to an empty array\r\n\r\n   \r\n    const [postDate, setPostDate]= useState([]);\r\n    const [posterUsername, setPosterUsername]=useState(currentUser.login.username)\r\n    const [avatar, setAvatar] = useState(currentUser.picture.medium)\r\n\r\n    let {postId} = useParams();\r\n    console.log(postId)\r\n  \r\n\r\n    return(\r\n    <div>\r\n   <Nav/>\r\n     \r\n      <div className=\"main-page\">\r\n     \r\n      \r\n      \r\n      <div className=\"posts-container\">\r\n      <div className=\"posts-heading-container\">\r\n      <Typography className={classes.postsTitle} variant=\"h3\">Posts</Typography>\r\n    \r\n \r\n     \r\n      </div>\r\n      \r\n    {postId === undefined ? <CreatePost \r\n        onAdd ={addPost}\r\n        posterUsername ={posterUsername}\r\n        avatar={avatar}\r\n        /> : null }\r\n\r\n\r\n        {/* Map through the posts array and display each post in it*/}\r\n\r\n      {posts.filter(postItem=>{\r\n         if(postId===postItem.id){\r\n            return postItem ;\r\n         } else if(postId === undefined){\r\n           return postItem;\r\n         }\r\n        }).map((postItem, index) => {\r\n         return (\r\n          \r\n          <Post\r\n         key={postItem.id}\r\n          id ={postItem.id}\r\n          postId ={postItem.id}\r\n          title={postItem.title}\r\n          content={postItem.content}\r\n          posterUsername ={postItem.posterUsername}\r\n          avatar={postItem.avatar}\r\n          timestamp = {postItem.timestamp}\r\n          onDelete={deletePost}\r\n          postDate ={postDate}\r\n          usersComments ={usersComments}\r\n          setUsersComments ={setUsersComments}\r\n          \r\n         \r\n         />\r\n         );\r\n         })}\r\n\r\n         {usersPosts.filter(userPost =>{\r\n          if(postId===userPost.id){\r\n          return userPost\r\n          }else if(postId === undefined){\r\n            return userPost;\r\n          }\r\n         }).map((postItem, index) => {\r\n         return (<Post\r\n         key={postItem.id}\r\n          id ={postItem.id}\r\n          postId ={postItem.id}\r\n          title={postItem.title}\r\n          content={postItem.content}\r\n          posterUsername ={postItem.posterUsername}\r\n          avatar={postItem.avatar}\r\n          timestamp = {postItem.timestamp}\r\n          onDelete={deletePost}\r\n          postDate ={postDate}\r\n          usersComments ={usersComments}\r\n          setUsersComments ={setUsersComments}\r\n         />\r\n         );\r\n         })}\r\n\r\n       \r\n\r\n         \r\n         </div>\r\n    </div>\r\n\r\n    </div>\r\n      \r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default PostsPage;","export default __webpack_public_path__ + \"static/media/login-img.2771cd15.jpg\";","export default __webpack_public_path__ + \"static/media/skulls.3080855b.png\";","import React, {useState} from \"react\";\r\nimport {Grid, Tabs, Tab, Box, Paper, Input, Button, Typography} from \"@material-ui/core\"\r\nimport { makeStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport image from '../images/login-img.jpg'; // Import using relative path\r\nimport skulls from \"../images/skulls.png\"\r\nimport { useHistory} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>{\r\n\r\n    return {\r\n    image1:{\r\n\r\n        backgroundImage: `url(${image})`,\r\n        backgroundPosition: 'bottom', \r\n        backgroundSize: 'cover', \r\n        backgroundRepeat: 'no-repeat',\r\n        height: '100vh',\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        opacity: \"0.8\"\r\n       \r\n        \r\n    },\r\n\r\n    input:{\r\n        borderRadius:\"10px\",\r\n        fontSize: \"25px\",\r\n        padding: \"20px\"\r\n    },\r\n\r\n    loginPaper:{\r\n        padding: \"25px\",\r\n        maxWidth: \"350px\",\r\n        margin: \"50px auto\",  \r\n        alignItems: \"center\", \r\n        marginTop:\"25px\",\r\n        backgroundColor: \"aliceblue\",\r\n        [theme.breakpoints.down(\"sm\")]:{\r\n           \r\n        }     \r\n    },\r\n\r\n    btn:{\r\n        fontSize: \"20px\",\r\n        margin: \"25px\",\r\n        backgroundColor: \"dodgerblue\"\r\n    },\r\n\r\n    subtitle:{\r\n        fontFamily: ['Roboto','sans-serif'].join(),\r\n        fontSize: \"20px\",\r\n        margin: \"25px\"\r\n    },\r\n\r\n    grid:{\r\n        alignSelf:\"center\"\r\n    },\r\n\r\n    overlay:{\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        backgroundImage: `url(${skulls})`,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        zIndex: \"20\",\r\n        backgroundRepeat: 'repeat',\r\n        backgroundColor: \"#008c8c\",\r\n        mixBlendMode: \"color-burn\"\r\n    },\r\n\r\n    imgText:{\r\n        color: \"white\",\r\n        fontSize: \"40px\",      \r\n        padding: \"20px\",\r\n        backgroundColor: \"dodgerblue\",\r\n        borderRadius: \"10px\",\r\n        maxWidth: \"300px\",\r\n       \r\n    },\r\n\r\n    imgTextMiddle:{\r\n        fontSize: \"40px\", \r\n        color: \"white\",\r\n        maxWidth: \"500px\",\r\n        fontFamily:[\r\n            \"Roboto\",\r\n            \"sans-serif\"\r\n        ].join(\",\"),\r\n       marginTop: \"25px\"\r\n    },\r\n\r\n    imgTextLower:{\r\n        fontSize: \"40px\", \r\n        color: \"white\",\r\n        bottom: \"5%\",\r\n        maxWidth: \"500px\",\r\n        margin:\"auto\",\r\n        fontFamily:[\r\n            \"Pacifico\",\r\n            \"sans-serif\"\r\n        ].join(\",\"),\r\n        borderRadius: \"10px\",\r\n        width: \"100%\"\r\n       \r\n    },\r\n\r\n    sloganContainer:{\r\n        position: \"absolute\",\r\n        top: \"5%\",\r\n        zIndex: \"30\",\r\n        width:\"100%\",\r\n       margin: \"auto\"\r\n    }\r\n\r\n    }\r\n\r\n})\r\n\r\nconst LoginPage = ({friendsList, getCurrentUser}) =>{\r\n\r\nlet history = useHistory();\r\n\r\nconst [creds, setCreds] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n})\r\n\r\nconst [error, setError] = useState(false)\r\n\r\n\r\nconst handleCreds = (e) =>{\r\nconst {name, value} = e.target\r\nsetCreds (prevCreds =>{\r\n    return {\r\n        ...prevCreds,\r\n        [name]: value\r\n    }\r\n})\r\n}\r\n\r\nconst handleSubmit=(e)=>{\r\n\r\ne.preventDefault();\r\n\r\n\r\n\r\nfriendsList.filter(friend => {\r\n    if(friend.login.username === creds.username && friend.login.password === creds.password){\r\n        localStorage.setItem(\"myuser\", JSON.stringify(friend));\r\n        history.push(\"/so-me/friends\")\r\n    } else{\r\n        setError(true);\r\n    }\r\n})\r\n\r\n}\r\n\r\nconst classes = useStyles();\r\n\r\n\r\n    return(\r\n        \r\n      <>\r\n        \r\n        <Grid container>\r\n        <Box clone order={{ xs: 2 , md: 1}}>\r\n\r\n        <Grid item xs={12} md={6}>\r\n      <div id=\"image-holder\" className={classes.image1}>\r\n        <div id=\"overlay\" className={classes.overlay}>\r\n            \r\n        </div>\r\n        <div id=\"slogan\" className={classes.sloganContainer}>\r\n        <Typography className={classes.imgText}>Social media</Typography>\r\n        <Typography className={classes.imgTextMiddle}>...that's free from ads</Typography>\r\n        <Typography className={classes.imgTextLower}>and much more personal!</Typography>\r\n        </div>\r\n      </div>        \r\n        </Grid>\r\n        </Box>\r\n\r\n        <Box clone order={{ xs: 1 , md: 2}}>\r\n        <Grid item xs={12} md={6} className={classes.grid}>\r\n        \r\n         <Paper className={classes.loginPaper} >\r\n         <Typography variant=\"h1\">So-Me</Typography>\r\n            <Typography className={classes.subtitle} variant=\"subtitle1\">Connect with your friends without anything getting in your way!</Typography>\r\n            {error ? <Typography variant =\"subtitle1\">Incorrect username and/or password</Typography> : null}\r\n            <form action=\"\">\r\n            <Input className={classes.input} fullWidth placeholder=\"Username\" onChange={handleCreds} name=\"username\" value={creds.username}/>\r\n            <Input type=\"password\" className={classes.input} fullWidth placeholder=\"Password\" onChange={handleCreds} name=\"password\" value ={creds.password}/>\r\n           <Button type=\"submit\" className={classes.btn} size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Sign In</Button>\r\n           </form>\r\n       \r\n         </Paper>\r\n        </Grid>\r\n      </Box>\r\n       \r\n      </Grid>\r\n</>\r\n      \r\n   \r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, { useState }from 'react';\r\nimport { Typography, Button, Box, Paper, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from \"react-router-dom\"\r\nimport skulls from \"../images/skulls.png\"\r\nimport Nav from \"../components/Nav\"\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    btn: {\r\n        fontSize : 15,\r\n        backgroundColor: \"violet\",\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        color: \"white\",\r\n        margin: 25\r\n    },\r\n    box: {\r\n        backgroundColor: \"white\",\r\n        padding: 10,\r\n        borderRadius: 20,\r\n        maxWidth:200,\r\n        margin: \"auto\",\r\n        paddingTop: 25,\r\n        height: \"100%\",\r\n    },\r\n    profilePic:{\r\n        borderRadius: 20,\r\n        width: \"75%\"\r\n    },\r\n    grid:{\r\n        padding: 50\r\n    },\r\n    name:{\r\n        padding: 10\r\n    },\r\n    email:{\r\n        overflowWrap: \"break-word\",\r\n        padding: 10,\r\n        fontFamily: ['Roboto','sans-serif'].join(),\r\n    },\r\n    bg:{\r\n        // backgroundImage: `url(${skulls})`,\r\n        // backgroundRepeat: \"repeat\",\r\n        // backgroundColor: \"aliceblue\"\r\n    }\r\n})\r\n\r\n\r\n\r\nconst Friends = ({friendsList}) => {\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n  const classes = useStyles();\r\n    const [searchQuery, setSearchQuery] = useState(\"\")\r\n    const handleClick = () =>{\r\n        \r\n    }\r\n\r\n\r\n\r\n   const handleSearch = (e) =>{\r\n        const searchTerm = e.target.value;\r\n    \r\n            setSearchQuery(searchTerm);     \r\n   }  \r\n\r\n \r\n\r\n    return (\r\n        <>\r\n        <Nav/>\r\n        <div className={classes.bg}>\r\n       \r\n        <Typography variant=\"h4\">Friends</Typography>\r\n        <TextField onChange={handleSearch} placeholder=\"Search for a friend\"/>\r\n       \r\n <Grid container spacing={3} alignItems=\"center\" className={classes.grid} >\r\n    \r\n\r\n\r\n        {friendsList.filter(val =>{\r\n            if(searchQuery==\"\"){\r\n                return val;\r\n            } else if(val.name.first.toLowerCase().includes(searchQuery.toLowerCase())){\r\n                return val;\r\n            }\r\n        }).map((friend, i)=>{\r\n            if(friend.login.username != currentUser.login.username)\r\n            return(\r\n                <Grid  key={i} id={i}  item xs={12}  sm={6} lg={4}> \r\n                    \r\n                <Link style={{ textDecoration: 'none' }} to={`/so-me/friends/${friend.login.username}`}>  \r\n                <Paper className={classes.box}>\r\n                <img className={classes.profilePic} src={friend.picture.large} alt=\"\" />\r\n               <Typography className={classes.name} variant=\"h6\"> {friend.name.first + \" \" + friend.name.last}</Typography>\r\n               <Typography variant=\"body1\" className={classes.email}>{friend.email}</Typography>\r\n                </Paper>\r\n                </Link>\r\n                </Grid>\r\n               \r\n               \r\n            )\r\n        })}\r\n           \r\n        </Grid>\r\n \r\n           \r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Friends;\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {useParams, Link} from \"react-router-dom\"\r\nimport {Paper, Tabs, Tab, Box, Typography, Grid} from \"@material-ui/core\"\r\nimport PostsPage from \"../components/PostsPage\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n        tabs:{\r\n            backgroundColor: \"white\",\r\n            color: \"green\",\r\n            margin: \"auto\",\r\n            \r\n        },\r\n        tab:{\r\n            margin:\"auto\",\r\n            fontSize: \"15px\",\r\n            fontWeight: \"bold\"\r\n        },\r\n        paper:{\r\n            width: \"500px\",\r\n            margin:\"auto\",\r\n          \r\n         \r\n        },\r\n        img:{\r\n            borderRadius: \"25%\"\r\n        },\r\n        postLink:{\r\n            color:\"dodgerblue\"\r\n        }\r\n\r\n\r\n    \r\n});\r\n\r\nconst Wall = ({friendsList, usersPosts, usersPhotos, usersComments, setUsersPosts, setUsersComments}) => {\r\n\r\n\r\n   \r\n\r\nlet {username} = useParams();\r\n\r\nconsole.log(username);\r\nconst randomId =uuidv4()\r\n\r\nconst classes = useStyles();\r\n\r\n\r\nconst [value, setValue] = useState('one');\r\nconst [wallOwner, setWallOwner] = useState(username) \r\n\r\nconst handleChange = (event, newValue) => {\r\n  setValue(newValue);\r\n\r\n};\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n\r\n\r\n            \r\n            <Typography variant=\"h2\">Wall</Typography>\r\n            {    friendsList.filter(friend =>{\r\n                if(friend.login.username === username)\r\n                return friend;\r\n            }).map((friendDetails, i)=>{\r\n                const code = friendDetails.nat;\r\n                const uri = \"https://www.countryflags.io/\";\r\n                const uriEnd = \"/flat/64.png\";\r\n                const fullUri = uri + code + uriEnd\r\n\r\n            \r\n\r\n                return(\r\n\r\n                    \r\n                    \r\n                  \r\n                    <Paper key={randomId} id={randomId} className={classes.paper}><Typography variant=\"h3\">{friendDetails.name.first + \" \" + friendDetails.name.last} </Typography>\r\n                    <Grid container>\r\n                    <Grid item xs={6}>\r\n                    <Box>\r\n                    <Typography variant=\"h6\">{friendDetails.login.username} </Typography>\r\n                    <img className={classes.img} src={friendDetails.picture.large} alt=\"\" />\r\n                    </Box>\r\n                    </Grid>\r\n                   \r\n                    <Grid item xs={6}>\r\n                    <Typography>{friendDetails.location.state + \", \" +friendDetails.location.country}</Typography>\r\n                    <img  src={fullUri} alt=\"\" />\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ width: '100%' }}>\r\n                  \r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        textColor=\"primary\"\r\n                        indicatorColor=\"primary\"\r\n                        aria-label=\"profile-tabs\"\r\n                        className={classes.tabs}\r\n                        \r\n                    >\r\n                        <Tab className={classes.tab} value=\"one\" label=\"Posts\"/>\r\n\r\n                       \r\n                        <Tab className={classes.tab} value=\"two\" label=\"Photos\" />\r\n                       \r\n                        <Tab className={classes.tab} value=\"three\" label=\"Friends\" />\r\n                      \r\n                    </Tabs>\r\n                        { value ===\"one\" ? usersPosts.filter(userPost =>{\r\n                            if(userPost.posterUsername === username){\r\n                            return userPost;\r\n                            }\r\n                        }).map(userPost=>{\r\n                            return(\r\n                               <Link key={userPost.id} id={userPost.id} to={`/so-me/posts/${userPost.id}`} style={{textDecoration:\"none\"}}> <Typography className={classes.postLink} variant=\"h6\" >{userPost.title}</Typography></Link>\r\n                            )\r\n                        }) : null}\r\n\r\n                        { value ===\"two\" ? usersPhotos.filter((userPhoto)=>{\r\n                            console.log(userPhoto.photoUploader);\r\n                            if(userPhoto.photoUploader === username){\r\n                                return userPhoto;\r\n                            }\r\n                        }).map(userPhoto=>{\r\n                            return(\r\n                                <Box style={{display: \"flex\"}}>\r\n                                \r\n                               <img style={{width: \"100%\"}} src={userPhoto.imageURL} alt=\"\" />\r\n                              \r\n                               </Box>\r\n                            )\r\n                        }) : null}\r\n\r\n                        \r\n                    \r\n                  \r\n                    </Box>\r\n                   </Paper>\r\n\r\n            \r\n\r\n                )\r\n            })}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wall;","import React from 'react';\r\nimport {Paper, Box, Typography} from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    logoutBox:{\r\n        width: \"400px\",\r\n        position: \"absolute\",\r\n        top: \"30%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        padding: \"25px\"\r\n    },\r\n\r\n})\r\n\r\nconst LogoutPage = () => {\r\n\r\n    localStorage.clear();\r\n\r\n    var timer = setTimeout(function() {\r\n        window.location='https://cpog19901.github.io/so-me'\r\n    }, 3000);\r\n\r\nconst classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Paper className={classes.logoutBox} elevation={12}>\r\n            <Typography variant=\"h1\">So-Me</Typography>\r\n            <Box sx={{ border: \"3px dodgerblue solid\", p:2, borderRadius: \"10px\" }}>\r\n                <Typography variant=\"h5\">You are now logged out</Typography>\r\n                <Typography variant=\"h6\">Redirecting....</Typography>\r\n            </Box>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogoutPage;","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Photos from \"./components/Photos\"\nimport PostsPage from \"./components/PostsPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport Friends from \"./components/Friends\"\nimport Wall from \"./components/Wall\";\nimport SinglePost from \"./components/SinglePost\"\nimport LogoutPage from \"./components/LogoutPage\"\nimport Test from \"./components/Test\"\nimport './App.css';\nimport axios from 'axios';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\n\n\nconst theme = createTheme({\n \n  typography: {\n    fontFamily: [\n      'Fredoka One', \n      \"cursive\"\n    ].join(\",\")\n  },\n\n  body1:{\n    fontFamily: ['Roboto','sans-serif'].join(),\n  }\n\n\n})\n\nfunction App() {\n\n\n\n  const [friendsList, setFriendsList] = useState([])\n  const [usersPosts, setUsersPosts] = useState([])\n  const [usersComments, setUsersComments] = useState([])\n  const [usersPhotos, setUsersPhotos] = useState([])\n  const [posts, setPosts] = useState([]);\n  const [photos, setPhotos] = useState([])\n\n\n  // addPost function sets the state of posts to return previous submitted posts and the latest post\n  function addPost(newPost){\n    setPosts(prevPosts =>{\n     return [newPost, ...prevPosts ]\n    })\n    fetch(\"https://so-me-db.herokuapp.com/posts\", {\n      method: \"POST\",\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(newPost)\n    })\n  }\n  \n// deletePost function sets the state of posts to return filtered items in the array where the id is not equal to index. \n\n  function deletePost(id){\n      \n    setPosts(prevPosts =>{\n      return prevPosts.filter((postItem)=> {\n        return postItem.id !== id;\n      })\n    })\n\n    setUsersPosts(prevPosts =>{\n      return prevPosts.filter((postItem)=> {\n        return postItem.id !== id;\n      })\n    })\n\n    fetch(\"https://so-me-db.herokuapp.com/posts\"+id, {\n      method: \"DELETE\",\n    })\n  \n  }\n\n  \n  function addPhoto(newPhoto){\n    setPhotos((prevItems)=>{\n      return [...prevItems, newPhoto];\n    });\n    fetch(\"https://so-me-db.herokuapp.com/photos\", {\n      method: \"POST\",\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(newPhoto)\n    })\n  }\n\n   \n\n\n  const fetchData = () =>{\n    const usersAPI = \"https://so-me-db.herokuapp.com/users\"\n    const postsAPI = \"https://so-me-db.herokuapp.com/posts\"\n    const commentsAPI = \"https://so-me-db.herokuapp.com/comments\"\n    const photosAPI = \"https://so-me-db.herokuapp.com/photos\"\n\n    const getUsers = axios.get(usersAPI)\n    const getPosts = axios.get(postsAPI);\n    const getComments = axios.get(commentsAPI);\n    const getPhotos = axios.get(photosAPI)\n\naxios.all([getUsers, getPosts, getComments, getPhotos]).then(\n  axios.spread((...allData)=>{\n    const allDataUsers = allData[0];\n    const allDataPosts= allData[1];\n    const allDataComments= allData[2];\n    const allDataPhotos = allData[3];\n\n\n    \n\n    setFriendsList(allDataUsers.data.reverse());\n    setUsersPosts(allDataPosts.data.reverse());\n    setUsersComments(allDataComments.data);\n    setUsersPhotos(allDataPhotos.data.reverse());\n    \n\n  })\n)\n}\n\n\n  useEffect(() => {\n    fetchData()\n  },[])\n\n  \n\n\n  return (<>\n  <ThemeProvider theme={theme}>\n   <Router>\n    <Switch>\n   \n    <Route path=\"/so-me/\" exact render={() => <LoginPage friendsList={friendsList} />}/>\n    <Route path=\"/so-me/posts\" exact render={() => <PostsPage usersPosts={usersPosts} posts={posts} usersComments={usersComments} setUsersPosts={setUsersPosts} setUsersComments={setUsersComments} addPost={addPost} deletePost={deletePost} />}/>\n    <Route path=\"/so-me/friends\" exact render={() => <Friends  friendsList={friendsList} />}/>\n    <Route path=\"/so-me/photos\" render={() => <Photos addPhoto={addPhoto} photos={photos} usersPhotos={usersPhotos}/>}/>\n    <Route path=\"/so-me/posts/:postId\"  render={() => <PostsPage usersPosts={usersPosts} posts={posts} usersComments={usersComments} setUsersPosts={setUsersPosts} setUsersComments={setUsersComments} addPost={addPost} deletePost={deletePost} />}/>\n    <Route path=\"/so-me/friends/:username\" render={() => <Wall friendsList={friendsList} usersPosts={usersPosts} usersPhotos={usersPhotos} usersComments={usersComments} setUsersPosts={setUsersPosts} setUsersComments={setUsersComments}  />}/>\n    <Route path=\"/so-me/logout\" render={() => <LogoutPage/>}/>\n    </Switch>\n    \n    </Router> \n    </ThemeProvider>\n  </>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}