{"version":3,"sources":["components/Nav.js","components/Photos.js","components/CreatePost.js","components/CreateComment.js","components/Comment.js","components/Post.js","components/PostsPage.js","images/login-img.jpg","images/skulls.png","components/LoginPage.js","components/Friends.js","components/Wall.js","components/LogoutPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","nav","position","height","overflowX","top","left","zIndex","borderRight","padding","backgroundColor","width","navHeading","marginTop","fontFamily","navBtn","border","borderRadius","margin","justifyContent","transition","transitionDuration","color","navIcon","marginRight","right","transform","navBtnList","paddingRight","logoutBtn","menuBtn","textAlign","cursor","fontSize","navImg","navBtnText","fontWeight","Nav","classes","currentUser","JSON","parse","localStorage","getItem","useState","isMenuVisible","setMenuVisible","className","onClick","style","display","Typography","variant","Avatar","src","picture","medium","alt","login","username","List","to","textDecoration","ListItem","input","photosTitle","photosContainer","uploadBtn","Photos","addPhoto","photos","usersPhotos","imageSelected","setImageSelected","Box","name","id","type","onChange","event","target","files","htmlFor","Button","component","e","formData","FormData","append","Axios","post","then","response","console","log","data","photoURL","secure_url","newPhoto","imageId","asset_id","imageURL","photoUploader","sx","overflowY","ImageList","cols","gap","map","item","ImageListItem","srcSet","loading","filter","userPhoto","submitBtn","textBox","CreatePost","props","currentDate","Date","toLocaleString","uuidv4","title","content","posterUsername","avatar","timestamp","setPost","handleChange","value","prevPost","action","TextField","fullWidth","placeholder","label","multiline","size","onAdd","preventDefault","submitCommentBtn","CreateComment","commentOwner","commentBelongsTo","commentContent","commentPostedBy","commentAvatar","commentTimestamp","comment","setComment","prevComment","postContent","join","overflowWrap","alignSelf","profileInfo","contentBox","marginBottom","backgroundImage","commentHolder","marginLeft","delIcon","date","whiteSpace","breakpoints","down","Comment","Paper","elevation","onDelete","Post","comments","setComments","isLikeClicked","setIsLikeClicked","deleteComment","prevComments","commentItem","index","setUsersComments","fetch","method","like","setLike","changeColor","i","postId","newComment","headers","body","stringify","usersComments","postsTitle","titleContainer","backgroundSize","alignItems","mainPage","up","PostsPage","usersPosts","setUsersPosts","addPost","deletePost","posts","postDate","useParams","undefined","postItem","userPost","image1","image","backgroundPosition","backgroundRepeat","opacity","loginPaper","maxWidth","btn","subtitle","grid","overlay","skulls","mixBlendMode","imgText","imgTextMiddle","imgTextLower","bottom","sloganContainer","logo","error","LoginPage","friendsList","history","getCurrentUser","useHistory","password","creds","setCreds","setError","handleCreds","prevCreds","Grid","container","clone","order","xs","md","Input","friend","setItem","push","box","paddingTop","profilePic","email","bg","Friends","searchQuery","setSearchQuery","searchTerm","spacing","val","first","toLowerCase","includes","sm","lg","large","last","tabs","tab","paper","img","postLink","background","tabWindow","flexDirection","friendListItem","wallUsername","infoContainer","friendContainer","Wall","randomId","setValue","newValue","friendDetails","fullUri","nat","location","state","country","Tabs","textColor","indicatorColor","aria-label","Tab","class","logoutBox","LogoutPage","clear","setTimeout","window","p","createTheme","typography","body1","palette","primary","main","App","setFriendsList","setUsersPhotos","setPosts","setPhotos","newPost","prevPosts","prevItems","useEffect","getUsers","axios","get","getPosts","getComments","getPhotos","all","spread","allDataPosts","allDataComments","allDataPhotos","reverse","fetchData","ThemeProvider","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78ca7f53.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Typography, List, ListItem, Avatar} from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport MenuTwoToneIcon from '@material-ui/icons/MenuTwoTone';\r\n\r\n\r\nconst useStyles = makeStyles( theme => { \r\n    return {\r\n    nav:{\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    overflowX: \"hidden\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"100\",\r\n    borderRight: \"2px solid dodgerblue\",\r\n    padding: \"0 10px\",\r\n    backgroundColor: \"aliceblue\",\r\n    width: \"225px\",\r\n    \r\n    },\r\n\r\n    navHeading:{\r\n        marginTop: \"50px\",\r\n        fontFamily: \"Fredoka One\"\r\n    },\r\n\r\n    navBtn:\r\n    {\r\n        border: \"2px solid dodgerblue\",\r\n        borderRadius: \"10px\",\r\n        padding: \"15px\",\r\n        margin: \"5px 10px 5px 5px\",\r\n        justifyContent: \"space-between\",\r\n        \"&:hover\" : {\r\n        backgroundColor: \"dodgerblue\",\r\n        transition: \"ease-in\",\r\n        transitionDuration: \"150ms\",\r\n        color: \"white\",\r\n        \r\n       \r\n        }\r\n    },\r\n     navIcon : {\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      position: \"absolute\",\r\n      marginRight: \"5px\",\r\n      right: \"0\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      backgroundColor: \"white\",\r\n      borderRadius: \"50%\",\r\n      padding: \"5px\"\r\n    },\r\n\r\n    navBtnList:{\r\n        paddingRight: \"10px\"\r\n    },\r\n\r\n    logoutBtn:{\r\n        marginTop: \"50vh\"\r\n    },\r\n    menuBtn:{\r\n        textAlign:\"left\",\r\n        cursor: \"pointer\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        zIndex: \"101\",\r\n        fontSize:\"40px\",\r\n        \r\n    },\r\n    navImg:{\r\n        margin: \"auto\"\r\n    },\r\n\r\n    navBtnText:{\r\n        fontFamily: \"Roboto\",\r\n        fontWeight: \"600\"\r\n    }\r\n    }\r\n  })\r\n\r\nconst Nav = () => {\r\n\r\n   const classes = useStyles();\r\n\r\n const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n \r\nconst [isMenuVisible, setMenuVisible] = useState(false)\r\n\r\nconst hideShowMenu = () =>{\r\n\r\n    if(isMenuVisible == true){\r\n        setMenuVisible(false);\r\n    }\r\n    else if(isMenuVisible ==false){\r\n        setMenuVisible(true);\r\n    }\r\n    \r\n}\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n        \r\n<MenuTwoToneIcon className={classes.menuBtn} onClick={hideShowMenu}/>\r\n        <div style={{display: isMenuVisible ? \"inline-block\" : \"none\"}} className={classes.nav}>\r\n       \r\n        <Typography variant=\"h2\" className={classes.navHeading} >So-Me</Typography>\r\n        <Avatar className={classes.navImg} src={currentUser.picture.medium} alt=\"\"/>\r\n        <Typography variant=\"subtitle1\">{currentUser.login.username}</Typography>\r\n        \r\n            <List className={classes.navBtnList}>\r\n                \r\n                  \r\n              \r\n            <Link to=\"/so-me/friends\" style={{ textDecoration: 'none', color:\"dodgerblue\"}} >\r\n            <ListItem className={classes.navBtn}> \r\n           <Typography className={classes.navBtnText}>Friends </Typography>  <i className=\"fas fa-user-friends\"></i>\r\n            </ListItem>\r\n            </Link>\r\n            <Link to=\"/so-me/posts\" style={{ textDecoration: 'none', color:\"dodgerblue\" }}>   \r\n            <ListItem className={classes.navBtn}>  \r\n            <Typography className={classes.navBtnText}>Posts </Typography> <i className=\"far fa-newspaper\"></i>\r\n            </ListItem>\r\n            </Link>\r\n            <Link to =\"/so-me/photos\" style={{ textDecoration: 'none', color:\"dodgerblue\" }}>\r\n            <ListItem className={classes.navBtn}>\r\n          <Typography className={classes.navBtnText}> Photos </Typography> <i className=\"fas fa-images\"></i>\r\n            </ListItem>\r\n            </Link>\r\n           <Link to=\"/so-me/logout\" style={{ textDecoration: 'none', color:\"dodgerblue\" }}>\r\n           <ListItem className={classes.navBtn} style={{marginTop: \"50vh\" }}> \r\n           <Typography className={classes.navBtnText}> Logout </Typography> <i className=\"fas fa-sign-out-alt\"></i>\r\n           </ListItem>\r\n           </Link>\r\n            </List>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from \"axios\"\r\nimport { Image } from \"cloudinary-react\"; \r\nimport Nav from \"../components/Nav\"\r\nimport {Typography, ImageList, ImageListItem, Box, Button, Card} from \"@material-ui/core\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  input:{\r\n    \r\n    margin: \"10px auto\",\r\n    padding: \"10px\",\r\n    borderRadius: \"10px\",\r\n    fontFamily: \"Roboto, cursive\",\r\n    display:\"block\"\r\n  },\r\n\r\n  photosTitle:{\r\n   fontFamily: \"Fredoka One\"\r\n  },\r\n\r\n  photosContainer:{\r\n    width: \"500px\",\r\n    margin: \"auto\"\r\n  },\r\n\r\n  uploadBtn:{\r\n    margin: \"10px\"\r\n  }\r\n  \r\n  })\r\n\r\n\r\nconst Photos = ({addPhoto, photos, usersPhotos}) => {\r\n\r\n  const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\nconst classes= useStyles();\r\n\r\nconst [imageSelected, setImageSelected] = useState(\"\");\r\nconst [imageURLs, setImageURLs]= useState([]);\r\nconst [photo, setPhoto] = useState(\"\");\r\nconst [itemData, setItemData] = useState(\"\")\r\n\r\n\r\n\r\n// const addURL = (newURL) =>{\r\n//     setImageURLs( prevURLs =>{\r\n//       return [...prevURLs, newURL];\r\n//     } )\r\n// }\r\n\r\nconst uploadImage = (e) =>{\r\n  const formData = new FormData()\r\n    formData.append(\"file\", imageSelected)\r\n    formData.append(\"upload_preset\", \"iq5xsc7g\")\r\n\r\n    Axios.post(\"https://api.cloudinary.com/v1_1/dly13wqwx/image/upload\", formData).then((response)=>{\r\n      console.log(response.data)\r\n      const photoURL = response.data.secure_url;\r\n      const photoId = response.data.asset_id;\r\n      const newPhoto = {\r\n          imageId: photoId,\r\n          imageURL: photoURL,\r\n          photoUploader: currentUser.login.username\r\n        };\r\n      \r\n     \r\n      addPhoto(newPhoto);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Nav/>\r\n        <Box className={classes.photosContainer}>\r\n        \r\n            <Typography className={classes.photosTitle} variant=\"h2\">Photos</Typography>\r\n        \r\n            \r\n        \r\n            \r\n            <Typography  variant=\"body1\">Image name: {imageSelected.name}</Typography>\r\n    <input style={{display: \"none\"}} id=\"contained-button-file\" className={classes.input} type=\"file\" onChange={((event)=>{\r\n  setImageSelected(event.target.files[0]);\r\n})} />\r\n\r\n<label htmlFor=\"contained-button-file\"> \r\n   <Button variant=\"contained\" component=\"span\"> \r\n     Choose File\r\n   </Button> \r\n </label> \r\n\r\n<Button className={classes.uploadBtn} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={uploadImage}>Upload image</Button>\r\n\r\n<Box sx={{ width: \"100%\", height: 900, overflowY: 'scroll', margin:\"auto\" }}>\r\n\r\n      <ImageList variant=\"masonry\" cols={3} gap={10}>\r\n        {photos.map((item) => (\r\n          <ImageListItem key={item.imageId} id={item.imageId}>\r\n            <img\r\n              src={`${item.imageURL}?w=248&fit=crop&auto=format`}\r\n              srcSet={`${item.imageURL}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n              alt={item}\r\n              loading=\"lazy\"\r\n            />\r\n          </ImageListItem>\r\n        ))};\r\n\r\n        {usersPhotos.filter((userPhoto)=>{\r\n          if(userPhoto.photoUploader === currentUser.login.username)\r\n          return userPhoto;\r\n        \r\n        }).map((item) => (\r\n          <ImageListItem key={item.imageId} id={item.imageId}>\r\n            <img\r\n              src={`${item.imageURL}?w=248&fit=crop&auto=format`}\r\n              srcSet={`${item.imageURL}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n              alt={item}\r\n              loading=\"lazy\"\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n     \r\n    </Box>\r\n</Box>\r\n  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React, {useState} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    submitBtn:{\r\n        margin: \"25px\",\r\n        backgroundColor: \"dodgerblue\", \r\n        color: \"white\",\r\n        \"&:hover\": {\r\n            backgroundColor: 'dodgerblue'\r\n          }\r\n    },\r\n    textBox:{\r\n        backgroundColor:\"aliceblue\",\r\n        margin: \"10px 0\"\r\n      }\r\n})\r\n\r\n\r\nfunction CreatePost (props) {\r\n\r\nconst classes = useStyles()\r\n\r\nconst currentDate = new Date().toLocaleString();\r\n \r\n//set key id to empty string in post object\r\n\r\n\r\n\r\n\r\n    const [post, setPost] = useState({\r\n        id: uuidv4(),\r\n        title: \"\",\r\n        content: \"\",\r\n        posterUsername: props.posterUsername,\r\n        avatar: props.avatar,\r\n        timestamp: currentDate\r\n    })\r\n\r\n\r\n  // When submit post button is clicked, call the onAdd function and prevent refresh. The value of content is also cleared\r\n  function submitPost(e){\r\n    props.onAdd(post);\r\n    e.preventDefault();\r\n    setPost({\r\n        id: uuidv4(),\r\n        title: \"\",\r\n        content: \"\",\r\n        posterUsername: props.posterUsername,\r\n        avatar: props.avatar,\r\n        timestamp: currentDate\r\n    });\r\n}\r\n\r\n\r\n  //get name and value of the event and then update \"content\" value in post state\r\n\r\n    function handleChange (event) {\r\n        const {name, value} = event.target;\r\n          setPost(prevPost => {\r\n           \r\n            return{\r\n                ...prevPost,\r\n                [name]:value\r\n            };\r\n        }); \r\n    }\r\n\r\n  \r\n\r\n    return(\r\n        <div>\r\n            <form action=\"\">\r\n            <TextField\r\n                fullWidth\r\n                placeholder= \"Enter post title\" \r\n                name=\"title\"\r\n                value={post.title} \r\n                onChange={handleChange}\r\n                id=\"filled-textarea\"\r\n                variant=\"filled\"\r\n                label=\"Title\"\r\n                className={classes.textBox}\r\n                \r\n                />\r\n                \r\n               \r\n                <TextField\r\n                fullWidth\r\n                placeholder= \"Enter post content\" \r\n                name=\"content\"\r\n                value={post.content} \r\n                onChange={handleChange}\r\n                id=\"filled-textarea\"\r\n                multiline\r\n                variant=\"filled\"\r\n                label=\"Content\"\r\n                className={classes.textBox}\r\n                \r\n                />\r\n                <Button className={classes.submitBtn}  variant=\"contained\" size=\"medium\" name=\"submit-post\" type=\"submit\" onClick={submitPost}>Submit post</Button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import React, {useState} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\" \r\n\r\nconst useStyles = makeStyles({\r\n\r\n   submitCommentBtn:{\r\n       margin: \"10px 0\", \r\n       backgroundColor: \"dodgerblue\", \r\n       color: \"white\",\r\n       \"&:hover\": {\r\n        backgroundColor: 'dodgerblue'\r\n      }\r\n\r\n   }\r\n   \r\n})\r\n\r\nconst CreateComment = (props) =>{\r\n\r\n    const classes = useStyles();\r\n    const currentDate = new Date().toLocaleString();\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\nconst commentOwner =props.commentBelongsTo;\r\n\r\n\r\n    // set comment content to blank string\r\n    const[comment, setComment] = useState({\r\n        id: uuidv4(),\r\n        commentContent: \"\",     \r\n        commentOwner: commentOwner,\r\n        commentPostedBy : currentUser.login.username,\r\n        commentAvatar: currentUser.picture.medium,\r\n        commentTimestamp: currentDate\r\n    });\r\n\r\n\r\n    //submitComment function will prevent refresh add the comment to the comments array and \r\n    function submitComment(e){\r\n        props.onAdd(comment);\r\n        e.preventDefault();\r\n        setComment({\r\n            id: uuidv4(),\r\n            commentContent: \"\",\r\n            commentOwner: commentOwner,   \r\n            commentPostedBy : currentUser.login.username,\r\n            commentAvatar: currentUser.picture.medium,\r\n            commentTimestamp: currentDate\r\n        });\r\n    };\r\n\r\n        //get name and value of the event and then update \"content\" value in comment state\r\n    const handleChangeComment =(event) =>{\r\n        const {name, value} = event.target;\r\n        console.log(comment)\r\n        setComment(prevComment => {\r\n            return{\r\n                ...prevComment,\r\n                [name]:value\r\n            };\r\n        });\r\n    };    \r\n\r\n\r\n    \r\n\r\n    return(\r\n        \r\n        <div className=\"comment-input\">\r\n        <form action=\"\">\r\n        <TextField \r\n        name=\"commentContent\" \r\n        value={comment.commentContent} \r\n        fullWidth\r\n        placeholder=\"Enter a comment\" \r\n        multiline\r\n        variant=\"filled\"\r\n        label=\"New comment\"\r\n        onChange={handleChangeComment}>\r\n        </TextField>\r\n        <Button \r\n        className={classes.submitCommentBtn}\r\n        name=\"submit-comment\" \r\n        type=\"submit\" \r\n        variant=\"contained\"\r\n        onClick={submitComment}>Submit comment</Button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateComment;","import React from \"react\";\r\nimport { FcLike, FcFullTrash, FcLikePlaceholder} from \"react-icons/fc\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport { Paper, Button, Typography, Avatar } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport { MdDeleteForever} from \"react-icons/md\";\r\n\r\nconst useStyles = makeStyles(theme =>{\r\n  return{\r\n    postContent:{\r\n     fontFamily: ['Roboto','sans-serif'].join(),\r\n     fontWeight: \"600\",\r\n     overflowWrap: \"break-word\"\r\n    },\r\n\r\n    avatar:{\r\n      zIndex: \"10\"\r\n    },\r\n\r\n    name:{\r\n      backgroundColor: \"dodgerblue\",\r\n      borderRadius: \"0 10px 10px 0\",\r\n      padding: \"3px 25px 3px 25px\",\r\n      alignSelf: \"center\",\r\n      color: \"white\",\r\n      left: \"20px\",\r\n      position: \"absolute\",\r\n      zIndex: \"9\"\r\n    },\r\n\r\n    profileInfo:{\r\n      display:\"flex\",\r\n      position: \"relative\",\r\n      top: \"20px\"\r\n    },\r\n\r\n    contentBox:{\r\n      padding: \"30px\",\r\n      textAlign: \"justify\",\r\n      marginBottom: \"20px\",\r\n      position: \"relative\",\r\n      backgroundImage: `url(${\"./images/skulls.png\"})`,\r\n    },\r\n\r\n    commentHolder:{\r\n      width: \"90%\",\r\n      marginLeft: \"auto\"\r\n    },\r\n    delIcon:{\r\n      top: \"0\",\r\n      right: \"0\",\r\n      position: \"absolute\",\r\n      transform: \"translateY(-50%)\"\r\n     },\r\n     date:{\r\n      top: \"100%\",\r\n    left: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"white\",\r\n    display: \"inline\",\r\n    padding: \"8px\",\r\n    position: \"absolute\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"darkcyan\",\r\n    whiteSpace: \"nowrap\",\r\n    fontFamily: \"Roboto, cursive\",\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n           left: \"50%\"\r\n    }   \r\n    }\r\n  }\r\n\r\n}) \r\n\r\nconst Comment = (props) => {\r\n\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n\r\n  const classes = useStyles()\r\n\r\n    function handleClick(){\r\n     console.log(props.id)\r\n        props.onDelete(props.id, props.commentBelongsTo);\r\n}\r\nreturn(\r\n  <div className={classes.commentHolder}>\r\n  <div className={classes.profileInfo}>\r\n  <Avatar className={classes.avatar} src={props.commentAvatar} alt=\"\"/>\r\n  <Typography className={classes.name} variant=\"h6\">{props.commentPostedBy}</Typography>\r\n  </div>\r\n <Paper className={classes.contentBox} elevation ={12}>\r\n {currentUser.login.username === props.commentPostedBy ? <TiDelete className={classes.delIcon} style={{cursor: \"pointer\", fontSize: \"40px\", color:\"#bd1604\"}} onClick={handleClick}/> : null}\r\n  <p className={classes.postContent}>{props.content}</p>\r\n  <Typography className={classes.date}>{props.commentTimestamp}</Typography>\r\n </Paper>\r\n </div>\r\n)\r\n}\r\n\r\nexport default Comment;","import React,{useState}  from \"react\";\r\nimport { AiFillLike } from \"react-icons/ai\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport CreateComment from \"../components/CreateComment\";\r\nimport Comment from \"../components/Comment.js\";\r\nimport { Paper, Button, Typography, Avatar, Box } from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\n\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme =>{\r\n  return{\r\n    postContent:{\r\n     fontFamily: ['Roboto','sans-serif'].join(),\r\n     fontWeight: \"600\",\r\n     overflowWrap: \"break-word\"\r\n    },\r\n\r\n    avatar:{\r\n      zIndex: \"10\"\r\n    },\r\n\r\n    date:{\r\n      top: \"100%\",\r\n    left: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"white\",\r\n    display: \"inline\",\r\n    padding: \"8px\",\r\n    position: \"absolute\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"darkcyan\",\r\n    whiteSpace: \"nowrap\",\r\n    fontFamily: \"Roboto\",\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      left: \"50%\"\r\n}   \r\n    },\r\n\r\n    name:{\r\n      backgroundColor: \"dodgerblue\",\r\n      borderRadius: \"0 10px 10px 0\",\r\n      padding: \"3px 25px 3px 25px\",\r\n      alignSelf: \"center\",\r\n      color: \"white\",\r\n      left: \"20px\",\r\n      position: \"absolute\",\r\n      zIndex: \"9\"\r\n    },\r\n\r\n    profileInfo:{\r\n      display:\"flex\",\r\n      position: \"relative\",\r\n      top: \"20px\"\r\n    },\r\n\r\n    contentBox:{\r\n      padding: \"30px\",\r\n      textAlign: \"justify\",\r\n      marginBottom: \"20px\",\r\n      position: \"relative\",\r\n      backgroundImage: `url(${\"./images/skulls.png\"})`,\r\n    },\r\n    delIcon:{\r\n     top: \"0\",\r\n     right: \"0\",\r\n     position: \"absolute\",\r\n     transform: \"translateY(-50%)\"\r\n    }\r\n  }\r\n\r\n}) \r\n\r\nfunction Post(props){\r\n\r\n\r\nconst classes = useStyles()\r\n\r\n// set comments to empty array       \r\nconst [comments, setComments] = useState([]);    \r\n\r\n//set isLikeClicked state to false so like button is not shown as clicked\r\nconst[isLikeClicked, setIsLikeClicked] = useState(false);\r\n\r\n\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n \r\n\r\n\r\n// addComment function setsComments state to return all previous comments and latest comment\r\nfunction addComment(newComment){\r\n \r\n  \r\n  setComments(prevComments =>{\r\n   return [...prevComments, newComment ];\r\n  })\r\n\r\n  \r\n\r\n  \r\n\r\n  fetch(\"https://so-me-db.herokuapp.com/comments/\", {\r\n    method: \"POST\",\r\n    headers: {\"Content-type\": \"application/json\"},\r\n    body: JSON.stringify(newComment)\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// deleteComment function returns only comments \r\nfunction deleteComment(id){\r\n  console.log(id)\r\n        setComments(prevComments =>{\r\n          return prevComments.filter((commentItem, index)=> {\r\n            \r\n            return commentItem.id !== id;\r\n          })\r\n        })\r\n\r\n        props.setUsersComments(prevComments =>{\r\n          return prevComments.filter((commentItem, index)=> {\r\n            \r\n            return commentItem.id !== id;\r\n          })\r\n        })\r\n        \r\n        fetch(\"https://so-me-db.herokuapp.com/\"+id, {\r\n        method: \"DELETE\",\r\n      })\r\n        \r\n      }\r\n\r\n\r\n\r\n//set date in todayDate state\r\n\r\n\r\nconst [like, setLike] = useState(\"Like\")\r\n\r\n\r\n\r\n\r\n// function countLike(){\r\n//         setLike(like+1);        \r\n// }      \r\n      \r\n\r\n//handleClick function will call the onDelete function and take in the post id\r\nfunction handleClick(){\r\n        props.onDelete(props.id);\r\n        // setTodayDate(date);\r\n}        \r\n\r\n\r\n// change color of like icon when clicked\r\nfunction changeColor(){\r\n setIsLikeClicked(true)\r\n setLike(\"You liked this post\");\r\n\r\n}\r\n\r\n\r\nreturn(<>\r\n     \r\n        <Box className={classes.profileInfo} >\r\n         <Avatar className={classes.avatar} src={props.avatar} alt=\"\"/>\r\n         <Typography className={classes.name} variant=\"h6\">{props.posterUsername}</Typography>\r\n         </Box>\r\n        <Paper className={classes.contentBox} elevation ={12}>\r\n      { props.posterUsername === currentUser.login.username ? <TiDelete className={classes.delIcon} style={{cursor: \"pointer\", fontSize: \"40px\", color:\"#bd1604\"}} onClick={handleClick}/> : null}\r\n        <Typography variant=\"h6\">{props.title}</Typography>\r\n         <p className={classes.postContent}>{props.content}</p>\r\n         <AiFillLike style={ {color: isLikeClicked ? \"red\" : \"black\"}} size={25} onClick={changeColor}/><span>{like}</span>\r\n         <Typography className={classes.date}>{props.timestamp}</Typography>\r\n        </Paper>\r\n        \r\n\r\n\r\n{/* map though all coomments and display them */}\r\n        {comments.map((commentItem, i) => {\r\n         return (<Comment\r\n          key={commentItem.id}\r\n          id ={commentItem.id}\r\n          content={commentItem.commentContent}\r\n          commentPostedBy ={commentItem.commentPostedBy}\r\n          commentAvatar ={commentItem.commentAvatar}\r\n          commentTimestamp = {commentItem.commentTimestamp}\r\n          onDelete={deleteComment}\r\n          changeColor ={changeColor}\r\n          commentBelongsTo ={props.postId}\r\n          isLikeClicked={isLikeClicked}\r\n          like ={like}\r\n         />\r\n         );\r\n         })}\r\n\r\n        <CreateComment\r\n          onAdd={addComment}   \r\n          commentBelongsTo ={props.postId}   \r\n        />\r\n\r\n{props.usersComments.filter((commentItem)=>{\r\n  \r\n  return commentItem.commentOwner === props.postId \r\n  \r\n}).map((commentItem, i) => {\r\n         return (<Comment\r\n          key={commentItem.id}\r\n          id ={commentItem.id}\r\n          content={commentItem.commentContent}\r\n          commentPostedBy ={commentItem.commentPostedBy}\r\n          commentAvatar ={commentItem.commentAvatar}\r\n          commentTimestamp = {commentItem.commentTimestamp}\r\n          onDelete={deleteComment}\r\n          changeColor ={changeColor}\r\n          commentBelongsTo ={props.postId}\r\n          isLikeClicked={isLikeClicked}\r\n          like ={like}\r\n         />\r\n         );\r\n         })}\r\n\r\n        \r\n         \r\n        \r\n\r\n</>)\r\n\r\n}\r\n\r\nexport default Post;","import React,{useState} from \"react\";\r\nimport CreatePost from \"../components/CreatePost\"\r\nimport Post from \"../components/Post\"\r\nimport Nav from \"../components/Nav\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport {Typography, Box} from \"@material-ui/core\"\r\nimport {useParams, Link} from \"react-router-dom\"\r\n\r\nconst useStyles=makeStyles(theme=>{\r\n\r\n  return{\r\n    postsTitle : {\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"aliceblue\",\r\n    fontFamily: \"Fredoka One\"\r\n  },\r\n  titleContainer:{\r\n    width: \"100%\",\r\n    backgroundSize: \"cover\",\r\n    backgroundImage: `url(./images/newsfeed.png)`,\r\n    height: \"200px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: \"0 0 50px 0\"\r\n},\r\nmainPage:{\r\n  display:\"flex\",\r\n  margin: \"auto\",\r\n[theme.breakpoints.up(\"sm\")]:{\r\n  width: \"500px\"\r\n}\r\n  \r\n}\r\n}\r\n})\r\n\r\nconst PostsPage = ({ usersPosts, usersComments, setUsersPosts, setUsersComments, addPost, deletePost, posts}) =>{\r\n\r\n \r\nconst classes=useStyles();\r\nconst currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n  //set state of posts constant to an empty array\r\n\r\n   \r\n    const [postDate, setPostDate]= useState([]);\r\n    const [posterUsername, setPosterUsername]=useState(currentUser.login.username)\r\n    const [avatar, setAvatar] = useState(currentUser.picture.medium)\r\n\r\n    let {postId} = useParams();\r\n    console.log(postId)\r\n  \r\n\r\n    return(\r\n    <div>\r\n   <Nav/>\r\n     \r\n      <div className={classes.mainPage}>\r\n     \r\n      \r\n      \r\n      <div className=\"posts-container\">\r\n      <Box className={classes.titleContainer}>\r\n      \r\n      <Typography className={classes.postsTitle} variant=\"h4\">Newsfeed</Typography>\r\n      </Box>\r\n \r\n     \r\n      \r\n      \r\n    {postId === undefined ? <CreatePost \r\n        onAdd ={addPost}\r\n        posterUsername ={posterUsername}\r\n        avatar={avatar}\r\n        /> : null }\r\n\r\n\r\n        {/* Map through the posts array and display each post in it*/}\r\n\r\n      {posts.filter(postItem=>{\r\n         if(postId===postItem.id){\r\n            return postItem ;\r\n         } else if(postId === undefined){\r\n           return postItem;\r\n         }\r\n        }).map((postItem, index) => {\r\n         return (\r\n          \r\n          <Post\r\n         key={postItem.id}\r\n          id ={postItem.id}\r\n          postId ={postItem.id}\r\n          title={postItem.title}\r\n          content={postItem.content}\r\n          posterUsername ={postItem.posterUsername}\r\n          avatar={postItem.avatar}\r\n          timestamp = {postItem.timestamp}\r\n          onDelete={deletePost}\r\n          postDate ={postDate}\r\n          usersComments ={usersComments}\r\n          setUsersComments ={setUsersComments}\r\n          \r\n         \r\n         />\r\n         );\r\n         })}\r\n\r\n         {usersPosts.filter(userPost =>{\r\n          if(postId===userPost.id){\r\n          return userPost\r\n          }else if(postId === undefined){\r\n            return userPost;\r\n          }\r\n         }).map((postItem, index) => {\r\n         return (<Post\r\n         key={postItem.id}\r\n          id ={postItem.id}\r\n          postId ={postItem.id}\r\n          title={postItem.title}\r\n          content={postItem.content}\r\n          posterUsername ={postItem.posterUsername}\r\n          avatar={postItem.avatar}\r\n          timestamp = {postItem.timestamp}\r\n          onDelete={deletePost}\r\n          postDate ={postDate}\r\n          usersComments ={usersComments}\r\n          setUsersComments ={setUsersComments}\r\n         />\r\n         );\r\n         })}\r\n\r\n       \r\n\r\n         \r\n         </div>\r\n    </div>\r\n\r\n    </div>\r\n      \r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default PostsPage;","export default __webpack_public_path__ + \"static/media/login-img.2771cd15.jpg\";","export default __webpack_public_path__ + \"static/media/skulls.3080855b.png\";","import React, {useState} from \"react\";\r\nimport {Grid, Tabs, Tab, Box, Paper, Input, Button, Typography} from \"@material-ui/core\"\r\nimport { makeStyles, createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport image from '../images/login-img.jpg'; // Import using relative path\r\nimport skulls from \"../images/skulls.png\"\r\nimport { useHistory} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>{\r\n\r\n    return {\r\n    image1:{\r\n\r\n        backgroundImage: `url(${image})`,\r\n        backgroundPosition: 'bottom', \r\n        backgroundSize: 'cover', \r\n        backgroundRepeat: 'no-repeat',\r\n        height: '100vh',\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        opacity: \"0.8\"\r\n       \r\n        \r\n    },\r\n\r\n    input:{\r\n        borderRadius:\"10px\",\r\n        fontSize: \"25px\",\r\n        padding: \"20px\"\r\n    },\r\n\r\n    loginPaper:{\r\n        padding: \"25px\",\r\n        maxWidth: \"350px\",\r\n        margin: \"50px auto\",  \r\n        alignItems: \"center\", \r\n        marginTop:\"25px\",\r\n        backgroundColor: \"aliceblue\",\r\n        [theme.breakpoints.down(\"sm\")]:{\r\n           \r\n        }     \r\n    },\r\n\r\n    btn:{\r\n        fontSize: \"20px\",\r\n        margin: \"25px\",\r\n        backgroundColor: \"dodgerblue\"\r\n    },\r\n\r\n    subtitle:{\r\n        fontFamily: ['Roboto','sans-serif'].join(),\r\n        fontSize: \"20px\",\r\n        margin: \"25px\"\r\n    },\r\n\r\n    grid:{\r\n        alignSelf:\"center\"\r\n    },\r\n\r\n    overlay:{\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        backgroundImage: `url(${skulls})`,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        zIndex: \"20\",\r\n        backgroundRepeat: 'repeat',\r\n        backgroundColor: \"#008c8c\",\r\n        mixBlendMode: \"color-burn\"\r\n    },\r\n\r\n    imgText:{\r\n        color: \"white\",\r\n        fontSize: \"40px\",      \r\n        padding: \"20px\",\r\n        backgroundColor: \"dodgerblue\",\r\n        borderRadius: \"10px\",\r\n        maxWidth: \"300px\",\r\n       \r\n    },\r\n\r\n    imgTextMiddle:{\r\n        fontSize: \"40px\", \r\n        color: \"white\",\r\n        maxWidth: \"500px\",\r\n        fontFamily:[\r\n            \"Roboto\",\r\n            \"sans-serif\"\r\n        ].join(\",\"),\r\n       marginTop: \"25px\"\r\n    },\r\n\r\n    imgTextLower:{\r\n        fontSize: \"40px\", \r\n        color: \"white\",\r\n        bottom: \"5%\",\r\n        maxWidth: \"500px\",\r\n        margin:\"auto\",\r\n        fontFamily:[\r\n            \"Pacifico\",\r\n            \"sans-serif\"\r\n        ].join(\",\"),\r\n        borderRadius: \"10px\",\r\n        width: \"100%\"\r\n       \r\n    },\r\n\r\n    sloganContainer:{\r\n        position: \"absolute\",\r\n        top: \"5%\",\r\n        zIndex: \"30\",\r\n        width:\"100%\",\r\n       margin: \"auto\"\r\n    },\r\n\r\n    logo:{\r\n        fontFamily:\"Fredoka One, Roboto\"\r\n    },\r\n    error:{\r\n        fontFamily: \"Fredoka One\"\r\n    }\r\n\r\n    }\r\n\r\n})\r\n\r\nconst LoginPage = ({friendsList, getCurrentUser}) =>{\r\n\r\nlet history = useHistory();\r\n\r\nconst [creds, setCreds] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n})\r\n\r\nconst [error, setError] = useState(false)\r\n\r\n\r\nconst handleCreds = (e) =>{\r\nconst {name, value} = e.target\r\nsetCreds (prevCreds =>{\r\n    return {\r\n        ...prevCreds,\r\n        [name]: value\r\n    }\r\n})\r\n}\r\n\r\nconst handleSubmit=(e)=>{\r\n\r\ne.preventDefault();\r\n\r\n\r\n\r\nfriendsList.filter(friend => {\r\n    if(friend.login.username === creds.username && friend.login.password === creds.password){\r\n        localStorage.setItem(\"myuser\", JSON.stringify(friend));\r\n        history.push(\"/so-me/friends\")\r\n    } else{\r\n        setError(true);\r\n    }\r\n})\r\n\r\n}\r\n\r\nconst classes = useStyles();\r\n\r\n\r\n    return(\r\n        \r\n      <>\r\n        \r\n        <Grid container>\r\n        <Box clone order={{ xs: 2 , md: 1}}>\r\n\r\n        <Grid item xs={12} md={6}>\r\n      <div id=\"image-holder\" className={classes.image1}>\r\n        <div id=\"overlay\" className={classes.overlay}>\r\n            \r\n        </div>\r\n        <div id=\"slogan\" className={classes.sloganContainer}>\r\n        <Typography className={classes.imgText}>Social media</Typography>\r\n        <Typography className={classes.imgTextMiddle}>...that's free from ads</Typography>\r\n        <Typography className={classes.imgTextLower}>and much more personal!</Typography>\r\n        </div>\r\n      </div>        \r\n        </Grid>\r\n        </Box>\r\n\r\n        <Box clone order={{ xs: 1 , md: 2}}>\r\n        <Grid item xs={12} md={6} className={classes.grid}>\r\n        \r\n         <Paper className={classes.loginPaper} >\r\n         <Typography className={classes.logo} variant=\"h1\">So-Me</Typography>\r\n            <Typography className={classes.subtitle} variant=\"subtitle1\">Connect with your friends without anything getting in your way!</Typography>\r\n            {error ? <Typography className={classes.error}variant =\"subtitle1\">Incorrect username and/or password</Typography> : null}\r\n            <form action=\"\">\r\n            <Input className={classes.input} fullWidth placeholder=\"Username\" onChange={handleCreds} name=\"username\" value={creds.username}/>\r\n            <Input type=\"password\" className={classes.input} fullWidth placeholder=\"Password\" onChange={handleCreds} name=\"password\" value ={creds.password}/>\r\n           <Button type=\"submit\" className={classes.btn} size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Sign In</Button>\r\n           </form>\r\n       \r\n         </Paper>\r\n        </Grid>\r\n      </Box>\r\n       \r\n      </Grid>\r\n</>\r\n      \r\n   \r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, { useState }from 'react';\r\nimport { Typography, Button, Box, Paper, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from \"react-router-dom\"\r\nimport skulls from \"../images/skulls.png\"\r\nimport Nav from \"../components/Nav\"\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    btn: {\r\n        fontSize : 15,\r\n        backgroundColor: \"violet\",\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        color: \"white\",\r\n        margin: 25\r\n    },\r\n    box: {\r\n        backgroundColor: \"white\",\r\n        padding: 10,\r\n        borderRadius: 20,\r\n        maxWidth:200,\r\n        margin: \"auto\",\r\n        paddingTop: 25,\r\n        height: \"100%\",\r\n    },\r\n    profilePic:{\r\n        borderRadius: 20,\r\n        width: \"75%\"\r\n    },\r\n    grid:{\r\n        padding: 50\r\n    },\r\n    name:{\r\n        padding: 10\r\n    },\r\n    email:{\r\n        overflowWrap: \"break-word\",\r\n        padding: 10,\r\n        fontFamily: ['Roboto','sans-serif'].join(),\r\n    },\r\n    bg:{\r\n        // backgroundImage: `url(${skulls})`,\r\n        // backgroundRepeat: \"repeat\",\r\n        // backgroundColor: \"aliceblue\"\r\n    }\r\n})\r\n\r\n\r\n\r\nconst Friends = ({friendsList}) => {\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem(\"myuser\"));\r\n\r\n  const classes = useStyles();\r\n    const [searchQuery, setSearchQuery] = useState(\"\")\r\n    const handleClick = () =>{\r\n        \r\n    }\r\n\r\n\r\n\r\n   const handleSearch = (e) =>{\r\n        const searchTerm = e.target.value;\r\n    \r\n            setSearchQuery(searchTerm);     \r\n   }  \r\n\r\n \r\n\r\n    return (\r\n        <>\r\n        <Nav/>\r\n        <div className={classes.bg}>\r\n       \r\n        <Typography variant=\"h4\">Friends</Typography>\r\n        <TextField onChange={handleSearch} placeholder=\"Search for a friend\"/>\r\n       \r\n <Grid container spacing={3} alignItems=\"center\" className={classes.grid} >\r\n    \r\n\r\n\r\n        {friendsList.filter(val =>{\r\n            if(searchQuery==\"\"){\r\n                return val;\r\n            } else if(val.name.first.toLowerCase().includes(searchQuery.toLowerCase())){\r\n                return val;\r\n            }\r\n        }).map((friend, i)=>{\r\n            if(friend.login.username != currentUser.login.username)\r\n            return(\r\n                <Grid  key={i} id={i}  item xs={12}  sm={6} lg={4}> \r\n                    \r\n                <Link style={{ textDecoration: 'none' }} to={`/so-me/friends/${friend.login.username}`}>  \r\n                <Paper className={classes.box}>\r\n                <img className={classes.profilePic} src={friend.picture.large} alt=\"\" />\r\n               <Typography className={classes.name} variant=\"h6\"> {friend.name.first + \" \" + friend.name.last}</Typography>\r\n               <Typography variant=\"body1\" className={classes.email}>{friend.email}</Typography>\r\n                </Paper>\r\n                </Link>\r\n                </Grid>\r\n               \r\n               \r\n            )\r\n        })}\r\n           \r\n        </Grid>\r\n \r\n           \r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Friends;\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {useParams, Link} from \"react-router-dom\"\r\nimport {Paper, Tabs, Tab, Box, Typography, Grid, Button} from \"@material-ui/core\"\r\nimport PostsPage from \"../components/PostsPage\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Nav from \"../components/Nav\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    return{\r\n        tabs:{\r\n            backgroundColor: \"white\",\r\n            color: \"green\",\r\n            margin: \"auto\",\r\n            \r\n        },\r\n        tab:{\r\n            margin:\"auto\",\r\n            fontSize: \"15px\",\r\n            fontWeight: \"bold\"\r\n        },\r\n        paper:{\r\n            \r\n            margin:\"auto\",\r\n            [theme.breakpoints.up(\"sm\")]:{\r\n                width: \"500px\"\r\n            }\r\n          \r\n         \r\n        },\r\n        img:{\r\n            borderRadius: \"25%\",\r\n            width: \"50px\"\r\n        },\r\n        postLink:{\r\n            color:\"white\",\r\n            padding: \"15px\",\r\n            textAlign:\"left\",\r\n            borderRadius: \"10px\",\r\n            margin: \"10px\",        \r\n            \r\n            background: \"linear-gradient(to right, #1488cc, #2b32b2)\" ,\r\n            textAlign:\"center\"\r\n        },\r\n        tabWindow:{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: \"25px 0\"\r\n        },\r\n        friendListItem:{\r\n            display: \"flex\",\r\n             alignItems:\"center\",\r\n             margin: \"10px\",\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"column\"\r\n        },\r\n        wallUsername:{\r\n            padding: \"50px 5px\",\r\n            color:\"dodgerblue\"\r\n        },\r\n        infoContainer:{\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            background: \"linear-gradient(to right, #1488cc, #2b32b2)\" ,\r\n            color: \"white\",\r\n            padding: \"50px 0\"\r\n\r\n        },\r\n        friendContainer:{\r\n            justifyContent:\"center\"\r\n        }\r\n\r\n    }\r\n    \r\n});\r\n\r\nconst Wall = ({friendsList, usersPosts, usersPhotos, usersComments, setUsersPosts, setUsersComments}) => {\r\n\r\n\r\n   \r\n\r\nlet {username} = useParams();\r\n\r\nconsole.log(username);\r\nconst randomId =uuidv4()\r\n\r\nconst classes = useStyles();\r\n\r\n\r\nconst [value, setValue] = useState('one');\r\nconst [wallOwner, setWallOwner] = useState(username) \r\n\r\nconst handleChange = (event, newValue) => {\r\n  setValue(newValue);\r\n\r\n};\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n\r\n\r\n            \r\n            \r\n            {    friendsList.filter(friend =>{\r\n                if(friend.login.username === username)\r\n                return friend;\r\n            }).map((friendDetails, i)=>{\r\n                const code = friendDetails.nat;\r\n                const uri = \"https://www.countryflags.io/\";\r\n                const uriEnd = \"/flat/64.png\";\r\n                const fullUri = uri + code + uriEnd\r\n\r\n            \r\n\r\n                return(\r\n\r\n                    \r\n                    \r\n                  \r\n                    <Paper key={randomId} id={randomId} className={classes.paper}>\r\n                    <Typography className={classes.wallUsername}  variant=\"h6\">{friendDetails.name.first + \" \" + friendDetails.name.last} </Typography>\r\n                    <Grid className={classes.infoContainer} container>\r\n                    <Grid item xs={6}>\r\n                    \r\n                    <Box>\r\n                    <Typography variant=\"h6\">{friendDetails.login.username} </Typography>\r\n                    <img className={classes.img} src={friendDetails.picture.large} alt=\"\" />\r\n                    </Box>\r\n                    </Grid>\r\n                   \r\n                    <Grid item xs={6}>\r\n                    <Typography>{friendDetails.location.state + \", \" +friendDetails.location.country}</Typography>\r\n                    <img  src={fullUri} alt=\"\" />\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ width: '100%' }}>\r\n                  \r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        textColor=\"primary\"\r\n                        indicatorColor=\"primary\"\r\n                        aria-label=\"profile-tabs\"\r\n                        className={classes.tabs}\r\n                        \r\n                    >\r\n                        <Tab className={classes.tab} value=\"one\" label=\"Posts\"/>\r\n\r\n                       \r\n                        <Tab className={classes.tab} value=\"two\" label=\"Photos\" />\r\n                       \r\n                        <Tab className={classes.tab} value=\"three\" label=\"Friends\" />\r\n                      \r\n                    </Tabs>\r\n                    <Grid container className={classes.tabWindow}>\r\n                        { value ===\"one\" ? usersPosts.filter(userPost =>{\r\n                            if(userPost.posterUsername === username){\r\n                            return userPost;\r\n                            }\r\n                        }).map(userPost=>{\r\n                            return(\r\n                               <Link key={userPost.id} id={userPost.id} to={`/so-me/posts/${userPost.id}`} style={{textDecoration:\"none\"}}> <Typography className={classes.postLink} variant=\"h6\" >{userPost.title}</Typography></Link>\r\n                            )\r\n                        }) : null}\r\n                    </Grid>\r\n                    <Grid container>\r\n                        { value ===\"two\" ? usersPhotos.filter((userPhoto)=>{\r\n                            console.log(userPhoto.photoUploader);\r\n                            if(userPhoto.photoUploader === username){\r\n                                return userPhoto;\r\n                            }\r\n                        }).map(userPhoto=>{\r\n                            return(\r\n                                \r\n                                \r\n                                <Grid item >\r\n                                <Box>\r\n                               <img style={{width: \"100%\"}} src={userPhoto.imageURL} alt=\"\" />\r\n                               </Box>\r\n                               </Grid>\r\n                            \r\n                            )\r\n                        }) : null}\r\n                    </Grid>\r\n                    <Grid container className={classes.friendContainer}>\r\n                        { value ===\"three\" ? friendsList.filter((friend) =>{\r\n                            if(friend.login.username != username){\r\n                                return friend;\r\n                            }\r\n                            })                          \r\n                            .map((friend) =>{\r\n                                return(\r\n                                    <Grid item >\r\n                                    <Link style={{textDecoration: \"none\"}} to={`/so-me/friends/${friend.login.username}`}>\r\n                                    <Paper className={classes.friendListItem} elevation={12} style={{}}>\r\n                                    <Typography style={{margin: \"10px\"}} variant=\"body1\">{friend.login.username}</Typography>\r\n                                    <img style={{borderRadius: \"10px\"}} src={friend.picture.medium} alt=\"\" />\r\n                                    <Button style={{margin: \"10px\"}} variant=\"contained\" color=\"primary\">Friends<i class=\"fas fa-check-circle\"></i></Button>\r\n                                    </Paper>\r\n                                    </Link>\r\n                                    </Grid>\r\n                                )\r\n                            }) :null\r\n                        \r\n\r\n                        }\r\n\r\n                \r\n                    </Grid>\r\n                  \r\n                    </Box>\r\n                   </Paper>\r\n\r\n            \r\n\r\n                )\r\n            })}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wall;","import React from 'react';\r\nimport {Paper, Box, Typography} from \"@material-ui/core\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    logoutBox:{\r\n        width: \"400px\",\r\n        position: \"absolute\",\r\n        top: \"30%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        padding: \"25px\"\r\n    },\r\n\r\n})\r\n\r\nconst LogoutPage = () => {\r\n\r\n    localStorage.clear();\r\n\r\n    var timer = setTimeout(function() {\r\n        window.location='https://cpog19901.github.io/so-me'\r\n    }, 3000);\r\n\r\nconst classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Paper className={classes.logoutBox} elevation={12}>\r\n            <Typography variant=\"h1\">So-Me</Typography>\r\n            <Box sx={{ border: \"3px dodgerblue solid\", p:2, borderRadius: \"10px\" }}>\r\n                <Typography variant=\"h5\">You are now logged out</Typography>\r\n                <Typography variant=\"h6\">Redirecting....</Typography>\r\n            </Box>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogoutPage;","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Photos from \"./components/Photos\"\nimport PostsPage from \"./components/PostsPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport Friends from \"./components/Friends\"\nimport Wall from \"./components/Wall\";\nimport SinglePost from \"./components/SinglePost\"\nimport LogoutPage from \"./components/LogoutPage\"\nimport Test from \"./components/Test\"\nimport './App.css';\nimport axios from 'axios';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\n\n\nconst theme = createTheme({\n \n  typography: {\n    fontFamily: [\n      'Roboto', \n      \"cursive\"\n    ].join(\",\")\n  },\n\n  body1:{\n    fontFamily: ['Roboto','sans-serif'].join(),\n  },\n  palette: {\n    primary: {\n      main: \"#1E90FF\"\n    }\n  }\n})\n\nfunction App() {\n\n\n\n  const [friendsList, setFriendsList] = useState([])\n  const [usersPosts, setUsersPosts] = useState([])\n  const [usersComments, setUsersComments] = useState([])\n  const [usersPhotos, setUsersPhotos] = useState([])\n  const [posts, setPosts] = useState([]);\n  const [photos, setPhotos] = useState([])\n\n\n  // addPost function sets the state of posts to return previous submitted posts and the latest post\n  function addPost(newPost){\n    setPosts(prevPosts =>{\n     return [newPost, ...prevPosts ]\n    })\n    fetch(\"https://so-me-db.herokuapp.com/posts\", {\n      method: \"POST\",\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(newPost)\n    })\n  }\n\n// deletePost function sets the state of posts to return filtered items in the array where the id is not equal to index. \n\n  function deletePost(id){\n      \n    setPosts(prevPosts =>{\n      return prevPosts.filter((postItem)=> {\n        return postItem.id !== id;\n      })\n    })\n\n    setUsersPosts(prevPosts =>{\n      return prevPosts.filter((postItem)=> {\n        return postItem.id !== id;\n      })\n    })\n\n    fetch(\"https://so-me-db.herokuapp.com/posts\"+id, {\n      method: \"DELETE\",\n    })\n  \n  }\n\n  \n  function addPhoto(newPhoto){\n    setPhotos((prevItems)=>{\n      return [...prevItems, newPhoto];\n    });\n    fetch(\"https://so-me-db.herokuapp.com/photos\", {\n      method: \"POST\",\n      headers: {\"Content-type\": \"application/json\"},\n      body: JSON.stringify(newPhoto)\n    })\n  }\n\n   \n\n\n  const fetchData = () =>{\n    const usersAPI = \"https://so-me-db.herokuapp.com/users\"\n    const postsAPI = \"https://so-me-db.herokuapp.com/posts\"\n    const commentsAPI = \"https://so-me-db.herokuapp.com/comments\"\n    const photosAPI = \"https://so-me-db.herokuapp.com/photos\"\n\n    const getUsers = axios.get(usersAPI)\n    const getPosts = axios.get(postsAPI);\n    const getComments = axios.get(commentsAPI);\n    const getPhotos = axios.get(photosAPI)\n\naxios.all([getUsers, getPosts, getComments, getPhotos]).then(\n  axios.spread((...allData)=>{\n    const allDataUsers = allData[0];\n    const allDataPosts= allData[1];\n    const allDataComments= allData[2];\n    const allDataPhotos = allData[3];\n\n\n    \n\n    setFriendsList(allDataUsers.data.reverse());\n    setUsersPosts(allDataPosts.data.reverse());\n    setUsersComments(allDataComments.data);\n    setUsersPhotos(allDataPhotos.data.reverse());\n    \n\n  })\n)\n}\n\n\n  useEffect(() => {\n    fetchData()\n  },[])\n\n  \n\n\n  return (<>\n  <ThemeProvider theme={theme}>\n   <Router>\n    <Switch>\n   \n    <Route path=\"/so-me/\" exact render={() => <LoginPage friendsList={friendsList} />}/>\n    <Route path=\"/so-me/posts\" exact render={() => <PostsPage usersPosts={usersPosts} posts={posts} usersComments={usersComments} setUsersPosts={setUsersPosts} setUsersComments={setUsersComments} addPost={addPost} deletePost={deletePost} />}/>\n    <Route path=\"/so-me/friends\" exact render={() => <Friends  friendsList={friendsList} />}/>\n    <Route path=\"/so-me/photos\" render={() => <Photos addPhoto={addPhoto} photos={photos} usersPhotos={usersPhotos}/>}/>\n    <Route path=\"/so-me/posts/:postId\"  render={() => <PostsPage usersPosts={usersPosts} posts={posts} usersComments={usersComments} setUsersPosts={setUsersPosts} setUsersComments={setUsersComments} addPost={addPost} deletePost={deletePost} />}/>\n    <Route path=\"/so-me/friends/:username\" render={() => <Wall friendsList={friendsList} usersPosts={usersPosts} usersPhotos={usersPhotos} usersComments={usersComments} setUsersPosts={setUsersPosts} setUsersComments={setUsersComments}  />}/>\n    <Route path=\"/so-me/logout\" render={() => <LogoutPage/>}/>\n    </Switch>\n    \n    </Router> \n    </ThemeProvider>\n  </>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}